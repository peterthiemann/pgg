; Generated by CF Analysis Development Version, June 1, 1995
; (cf:control 'poly 'if-split '!const-split '!verbose '!times '(cons-limit 8) '!check '!inline '!simplify '!clean)
(define future (lambda (x) x))
(define format-num
  (lambda (d w num)
    (let ((expt-10-d (expt 10 d)))
      (let ((n
             (floor (inexact->exact (round (* (abs num) expt-10-d))))))
        (let ((i (quotient n expt-10-d)))
          (let ((f (modulo n expt-10-d)))
            (let ((si
                   (string-append
                     (if (< num 0) "-" "")
                     (number->string i 10))))
              (let ((sf (number->string (+ f expt-10-d) 10)))
                (let ((sf@1
                       (if (> d 0)
                           (string-append
                             "."
                             (substring sf 1 (string-length sf)))
                           "")))
                  (let ((lsi (string-length si)))
                    (let ((lsf (string-length sf@1)))
                      (let ((blanks (- w (+ lsi lsf))))
                        (string-append
                          (make-string (max blanks 0) #\space)
                          si
                          sf@1)))))))))))))
(define constant-pi 3.141592653589793)
(define constant-minus-pi -3.141592653589793)
(define constant-pi/2 1.5707963267948966)
(define constant-minus-pi/2 -1.5707963267948966)
(define math-atan2
  (lambda (y x)
    (if (< 0.0 x)
        (atan (/ y x))
        (if (< y 0.0)
            (if (= x 0.0)
                constant-minus-pi/2
                (+ (atan (/ y x)) constant-minus-pi))
            (if (= x 0.0)
                constant-pi/2
                (+ (atan (/ y x)) constant-pi))))))
(define ffields-of-pt '((x . 0) (y . 1) (z . 2)))

;;; 'pt

(define pt-sub
  (lambda (p1 p2)
    (cons (vector
            (- (vector-ref (car p1) 0) (vector-ref (car p2) 0))
            (- (vector-ref (car p1) 1) (vector-ref (car p2) 1))
            (- (vector-ref (car p1) 2) (vector-ref (car p2) 2)))
          (cons () 3))))
(define pt-dist
  (lambda (p1 p2)
    (let ((dx
           (- (vector-ref (car p1) 0) (vector-ref (car p2) 0)))
          (dy (- (vector-ref (car p1) 1) (vector-ref (car p2) 1)))
          (dz (- (vector-ref (car p1) 2) (vector-ref (car p2) 2))))
      (sqrt (+ (* dx dx) (* dy dy) (* dz dz))))))
(define pt-phi
  (lambda (p)
    (let ((x (vector-ref (car p) 0)))
      (let ((y (vector-ref (car p) 1)))
        (let ((z (vector-ref (car p) 2)))
          (let ((b (math-atan2 x z)))
            (math-atan2 (+ (* (cos b) z) (* (sin b) x)) y)))))))
(define pt-theta
  (lambda (p)
    (math-atan2 (vector-ref (car p) 0) (vector-ref (car p) 2))))
(define ffields-of-tfo
  '((a . 0)
    (b . 1)
    (c . 2)
    (d . 3)
    (e . 4)
    (f . 5)
    (g . 6)
    (h . 7)
    (i . 8)
    (tx . 9)
    (ty . 10)
    (tz . 11)))

;;;'tfo

(define tfo-id
  '(#(1.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 1.0 0.0) '() 12))	;pjt: #12 --> #
(define tfo-apply
  (lambda (tfo p)
    (let ((x (vector-ref (car p) 0))
          (y (vector-ref (car p) 1))
          (z (vector-ref (car p) 2)))
      (cons (vector
              (+ (* x (vector-ref (car tfo) 0))
                 (* y (vector-ref (car tfo) 3))
                 (* z (vector-ref (car tfo) 6))
                 (vector-ref (car tfo) 9))
              (+ (* x (vector-ref (car tfo) 1))
                 (* y (vector-ref (car tfo) 4))
                 (* z (vector-ref (car tfo) 7))
                 (vector-ref (car tfo) 10))
              (+ (* x (vector-ref (car tfo) 2))
                 (* y (vector-ref (car tfo) 5))
                 (* z (vector-ref (car tfo) 8))
                 (vector-ref (car tfo) 11)))
            (cons () 3)))))
(define tfo-combine
  (lambda (A B)
    (cons (vector
            (+ (* (vector-ref (car A) 0) (vector-ref (car B) 0))
               (* (vector-ref (car A) 1) (vector-ref (car B) 3))
               (* (vector-ref (car A) 2) (vector-ref (car B) 6)))
            (+ (* (vector-ref (car A) 0) (vector-ref (car B) 1))
               (* (vector-ref (car A) 1) (vector-ref (car B) 4))
               (* (vector-ref (car A) 2) (vector-ref (car B) 7)))
            (+ (* (vector-ref (car A) 0) (vector-ref (car B) 2))
               (* (vector-ref (car A) 1) (vector-ref (car B) 5))
               (* (vector-ref (car A) 2) (vector-ref (car B) 8)))
            (+ (* (vector-ref (car A) 3) (vector-ref (car B) 0))
               (* (vector-ref (car A) 4) (vector-ref (car B) 3))
               (* (vector-ref (car A) 5) (vector-ref (car B) 6)))
            (+ (* (vector-ref (car A) 3) (vector-ref (car B) 1))
               (* (vector-ref (car A) 4) (vector-ref (car B) 4))
               (* (vector-ref (car A) 5) (vector-ref (car B) 7)))
            (+ (* (vector-ref (car A) 3) (vector-ref (car B) 2))
               (* (vector-ref (car A) 4) (vector-ref (car B) 5))
               (* (vector-ref (car A) 5) (vector-ref (car B) 8)))
            (+ (* (vector-ref (car A) 6) (vector-ref (car B) 0))
               (* (vector-ref (car A) 7) (vector-ref (car B) 3))
               (* (vector-ref (car A) 8) (vector-ref (car B) 6)))
            (+ (* (vector-ref (car A) 6) (vector-ref (car B) 1))
               (* (vector-ref (car A) 7) (vector-ref (car B) 4))
               (* (vector-ref (car A) 8) (vector-ref (car B) 7)))
            (+ (* (vector-ref (car A) 6) (vector-ref (car B) 2))
               (* (vector-ref (car A) 7) (vector-ref (car B) 5))
               (* (vector-ref (car A) 8) (vector-ref (car B) 8)))
            (+ (* (vector-ref (car A) 9) (vector-ref (car B) 0))
               (* (vector-ref (car A) 10) (vector-ref (car B) 3))
               (* (vector-ref (car A) 11) (vector-ref (car B) 6))
               (vector-ref (car B) 9))
            (+ (* (vector-ref (car A) 9) (vector-ref (car B) 1))
               (* (vector-ref (car A) 10) (vector-ref (car B) 4))
               (* (vector-ref (car A) 11) (vector-ref (car B) 7))
               (vector-ref (car B) 10))
            (+ (* (vector-ref (car A) 9) (vector-ref (car B) 2))
               (* (vector-ref (car A) 10) (vector-ref (car B) 5))
               (* (vector-ref (car A) 11) (vector-ref (car B) 8))
               (vector-ref (car B) 11)))
          (cons () 12))))
(define tfo-inv-ortho
  (lambda (tfo)
    (let ((tx (vector-ref (car tfo) 9)))
      (let ((ty (vector-ref (car tfo) 10)))
        (let ((tz (vector-ref (car tfo) 11)))
          (cons (vector
                  (vector-ref (car tfo) 0)
                  (vector-ref (car tfo) 3)
                  (vector-ref (car tfo) 6)
                  (vector-ref (car tfo) 1)
                  (vector-ref (car tfo) 4)
                  (vector-ref (car tfo) 7)
                  (vector-ref (car tfo) 2)
                  (vector-ref (car tfo) 5)
                  (vector-ref (car tfo) 8)
                  (- (+ (* (vector-ref (car tfo) 0) tx)
                        (* (vector-ref (car tfo) 1) ty)
                        (* (vector-ref (car tfo) 2) tz)))
                  (- (+ (* (vector-ref (car tfo) 3) tx)
                        (* (vector-ref (car tfo) 4) ty)
                        (* (vector-ref (car tfo) 5) tz)))
                  (- (+ (* (vector-ref (car tfo) 6) tx)
                        (* (vector-ref (car tfo) 7) ty)
                        (* (vector-ref (car tfo) 8) tz))))
                (cons () 12)))))))
(define tfo-align
  (lambda (p1 p2 p3)
    (let ((x1 (vector-ref (car p1) 0)))
      (let ((y1 (vector-ref (car p1) 1)))
        (let ((z1 (vector-ref (car p1) 2)))
          (let ((x3 (vector-ref (car p3) 0)))
            (let ((y3 (vector-ref (car p3) 1)))
              (let ((z3 (vector-ref (car p3) 2)))
                (let ((x31 (- x3 x1)))
                  (let ((y31 (- y3 y1)))
                    (let ((z31 (- z3 z1)))
                      (let ((rotpY (pt-sub p2 p1)))
                        (let ((Phi (pt-phi rotpY)))
                          (let ((Theta (pt-theta rotpY)))
                            (let ((sinP (sin Phi)))
                              (let ((sinT (sin Theta)))
                                (let ((cosP (cos Phi)))
                                  (let ((cosT (cos Theta)))
                                    (let ((sinPsinT (* sinP sinT)))
                                      (let ((sinPcosT (* sinP cosT)))
                                        (let ((cosPsinT (* cosP sinT)))
                                          (let ((cosPcosT (* cosP cosT)))
                                            (let ((rotpZ
                                                   (cons (vector
                                                           (- (* cosT x31)
                                                              (* sinT z31))
                                                           (+ (* sinPsinT
                                                                 x31)
                                                              (* cosP y31)
                                                              (* sinPcosT
                                                                 z31))
                                                           (+ (* cosPsinT
                                                                 x31)
                                                              (- (* sinP
                                                                    y31))
                                                              (* cosPcosT
                                                                 z31)))
                                                         (cons () 3))))
                                              (let ((Rho (pt-theta rotpZ)))
                                                (let ((cosR (cos Rho)))
                                                  (let ((sinR (sin Rho)))
                                                    (let ((x
                                                           (+ (- (* x1
                                                                    cosT))
                                                              (* z1 sinT))))
                                                      (let ((y
                                                             (- (- (- (* x1
                                                                         sinPsinT))
                                                                   (* y1
                                                                      cosP))
                                                                (* z1
                                                                   sinPcosT))))
                                                        (let ((z
                                                               (- (+ (- (* x1
                                                                           cosPsinT))
                                                                     (* y1
                                                                        sinP))
                                                                  (* z1
                                                                     cosPcosT))))
                                                          (cons (vector
                                                                  (- (* cosT
                                                                        cosR)
                                                                     (* cosPsinT
                                                                        sinR))
                                                                  sinPsinT
                                                                  (+ (* cosT
                                                                        sinR)
                                                                     (* cosPsinT
                                                                        cosR))
                                                                  (* sinP
                                                                     sinR)
                                                                  cosP
                                                                  (- (* sinP
                                                                        cosR))
                                                                  (- (- (* sinT
                                                                           cosR))
                                                                     (* cosPcosT
                                                                        sinR))
                                                                  sinPcosT
                                                                  (+ (- (* sinT
                                                                           sinR))
                                                                     (* cosPcosT
                                                                        cosR))
                                                                  (- (* x
                                                                        cosR)
                                                                     (* z
                                                                        sinR))
                                                                  y
                                                                  (+ (* x
                                                                        sinR)
                                                                     (* z
                                                                        cosR)))
                                                                (cons ()
                                                                      12)))))))))))))))))))))))))))))))
(define ffields-of-nuc
  '((dgf-base-tfo . 0)
    (P-O3*-275-tfo . 1)
    (P-O3*-180-tfo . 2)
    (P-O3*-60-tfo . 3)
    (P . 4)
    (O1P . 5)
    (O2P . 6)
    (O5* . 7)
    (C5* . 8)
    (H5* . 9)
    (H5** . 10)
    (C4* . 11)
    (H4* . 12)
    (O4* . 13)
    (C1* . 14)
    (H1* . 15)
    (C2* . 16)
    (H2** . 17)
    (O2* . 18)
    (H2* . 19)
    (C3* . 20)
    (H3* . 21)
    (O3* . 22)
    (N1 . 23)
    (N3 . 24)
    (C2 . 25)
    (C4 . 26)
    (C5 . 27)
    (C6 . 28)))

;;;'nuc

(define ffields-of-rA
  '((dgf-base-tfo . 0)
    (P-O3*-275-tfo . 1)
    (P-O3*-180-tfo . 2)
    (P-O3*-60-tfo . 3)
    (P . 4)
    (O1P . 5)
    (O2P . 6)
    (O5* . 7)
    (C5* . 8)
    (H5* . 9)
    (H5** . 10)
    (C4* . 11)
    (H4* . 12)
    (O4* . 13)
    (C1* . 14)
    (H1* . 15)
    (C2* . 16)
    (H2** . 17)
    (O2* . 18)
    (H2* . 19)
    (C3* . 20)
    (H3* . 21)
    (O3* . 22)
    (N1 . 23)
    (N3 . 24)
    (C2 . 25)
    (C4 . 26)
    (C5 . 27)
    (C6 . 28)
    (N6 . 29)
    (N7 . 30)
    (N9 . 31)
    (C8 . 32)
    (H2 . 33)
    (H61 . 34)
    (H62 . 35)
    (H8 . 36)))
;;;'rA
(define ffields-of-rC
  '((dgf-base-tfo . 0)
    (P-O3*-275-tfo . 1)
    (P-O3*-180-tfo . 2)
    (P-O3*-60-tfo . 3)
    (P . 4)
    (O1P . 5)
    (O2P . 6)
    (O5* . 7)
    (C5* . 8)
    (H5* . 9)
    (H5** . 10)
    (C4* . 11)
    (H4* . 12)
    (O4* . 13)
    (C1* . 14)
    (H1* . 15)
    (C2* . 16)
    (H2** . 17)
    (O2* . 18)
    (H2* . 19)
    (C3* . 20)
    (H3* . 21)
    (O3* . 22)
    (N1 . 23)
    (N3 . 24)
    (C2 . 25)
    (C4 . 26)
    (C5 . 27)
    (C6 . 28)
    (N4 . 29)
    (O2 . 30)
    (H41 . 31)
    (H42 . 32)
    (H5 . 33)
    (H6 . 34)))
;;;'rC
(define ffields-of-rG
  '((dgf-base-tfo . 0)
    (P-O3*-275-tfo . 1)
    (P-O3*-180-tfo . 2)
    (P-O3*-60-tfo . 3)
    (P . 4)
    (O1P . 5)
    (O2P . 6)
    (O5* . 7)
    (C5* . 8)
    (H5* . 9)
    (H5** . 10)
    (C4* . 11)
    (H4* . 12)
    (O4* . 13)
    (C1* . 14)
    (H1* . 15)
    (C2* . 16)
    (H2** . 17)
    (O2* . 18)
    (H2* . 19)
    (C3* . 20)
    (H3* . 21)
    (O3* . 22)
    (N1 . 23)
    (N3 . 24)
    (C2 . 25)
    (C4 . 26)
    (C5 . 27)
    (C6 . 28)
    (N2 . 29)
    (N7 . 30)
    (N9 . 31)
    (C8 . 32)
    (O6 . 33)
    (H1 . 34)
    (H21 . 35)
    (H22 . 36)
    (H8 . 37)))
;;;'rG
(define ffields-of-rU
  '((dgf-base-tfo . 0)
    (P-O3*-275-tfo . 1)
    (P-O3*-180-tfo . 2)
    (P-O3*-60-tfo . 3)
    (P . 4)
    (O1P . 5)
    (O2P . 6)
    (O5* . 7)
    (C5* . 8)
    (H5* . 9)
    (H5** . 10)
    (C4* . 11)
    (H4* . 12)
    (O4* . 13)
    (C1* . 14)
    (H1* . 15)
    (C2* . 16)
    (H2** . 17)
    (O2* . 18)
    (H2* . 19)
    (C3* . 20)
    (H3* . 21)
    (O3* . 22)
    (N1 . 23)
    (N3 . 24)
    (C2 . 25)
    (C4 . 26)
    (C5 . 27)
    (C6 . 28)
    (O2 . 29)
    (O4 . 30)
    (H3 . 31)
    (H5 . 32)
    (H6 . 33)))
;;;'rU
(define rA
  (cons (vector
          '(#(-0.0018			;pjt: #12 --> #
                -0.8207
                0.5714
                0.2679
                -0.5509
                -0.7904
                0.9634
                0.1517
                0.2209
                0.0073
                8.403
                0.6232)
             '()
             12)
          '(#(-0.8143			;pjt: #12 --> # etc
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(5.455 8.212 -2.881) '() 3)
          '(#(5.4546 8.8508 -1.9978) '() 3)
          '(#(5.7588 8.6625 -3.8259) '() 3)
          '(#(6.497 7.148 -2.598) '() 3)
          '(#(7.4896 7.5919 -2.5214) '() 3)
          '(#(6.163 6.486 -1.344) '() 3)
          '(#(6.54 5.12 -1.419) '() 3)
          '(#(7.2763 4.9681 -0.6297) '() 3)
          '(#(7.194 4.883 -2.777) '() 3)
          '(#(6.8667 3.9183 -3.1647) '() 3)
          '(#(8.586 5.091 -2.614) '() 3)
          '(#(8.951 4.7626 -1.789) '() 3)
          '(#(6.572 6.004 -3.609) '() 3)
          '(#(5.5636 5.7066 -3.8966) '() 3)
          '(#(7.3801 6.3562 -4.735) '() 3)
          '(#(4.715 0.491 -0.136) '() 3)
          '(#(6.349 2.173 -0.602) '() 3)
          '(#(5.953 0.965 -0.267) '() 3)
          '(#(5.29 2.979 -0.826) '() 3)
          '(#(3.972 2.639 -0.733) '() 3)
          '(#(3.677 1.316 -0.366) '() 3)
          '(#(2.428 0.845 -0.236) '() 3)
          '(#(3.166 3.729 -1.036) '() 3)
          '(#(5.317 4.299 -1.193) '() 3)
          '(#(4.01 4.678 -1.299) '() 3)
          '(#(6.689 0.1903 -0.0518) '() 3)
          '(#(1.647 1.446 -0.404) '() 3)
          '(#(2.278 -0.108 -0.028) '() 3)
          '(#(3.4421 5.5744 -1.5482) '() 3))
        (cons '(@@-ra-@@) 37)))
(define rA01
  (cons (vector
          '(#(-0.0043
                -0.8175
                0.5759
                0.2617
                -0.5567
                -0.7884
                0.9651
                0.1473
                0.2164
                0.0359
                8.3929
                0.5532)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(5.4352 8.2183 -2.7757) '() 3)
          '(#(5.383 8.7883 -1.8481) '() 3)
          '(#(5.7729 8.7436 -3.6691) '() 3)
          '(#(6.483 7.1518 -2.5252) '() 3)
          '(#(7.4749 7.5972 -2.4482) '() 3)
          '(#(6.1626 6.462 -1.2827) '() 3)
          '(#(6.5431 5.0992 -1.3905) '() 3)
          '(#(7.2871 4.9328 -0.6114) '() 3)
          '(#(7.1852 4.8935 -2.7592) '() 3)
          '(#(6.8573 3.9363 -3.1645) '() 3)
          '(#(8.578 5.1025 -2.6046) '() 3)
          '(#(8.9516 4.7577 -1.7902) '() 3)
          '(#(6.5522 6.03 -3.5612) '() 3)
          '(#(5.542 5.7356 -3.8459) '() 3)
          '(#(7.3487 6.4089 -4.6867) '() 3)
          '(#(4.7442 0.4514 -0.139) '() 3)
          '(#(6.3687 2.1459 -0.5926) '() 3)
          '(#(5.9795 0.9335 -0.2657) '() 3)
          '(#(5.3052 2.9471 -0.8125) '() 3)
          '(#(3.9891 2.5987 -0.723) '() 3)
          '(#(3.7016 1.2717 -0.3647) '() 3)
          '(#(2.4553 0.7925 -0.239) '() 3)
          '(#(3.177 3.6859 -1.0198) '() 3)
          '(#(5.3247 4.2695 -1.171) '() 3)
          '(#(4.0156 4.6415 -1.2759) '() 3)
          '(#(6.7198 0.1618 -0.0547) '() 3)
          '(#(1.6709 1.39 -0.4039) '() 3)
          '(#(2.3107 -0.1627 -0.0373) '() 3)
          '(#(3.4426 5.5361 -1.5199) '() 3))
        (cons '(@@-ra-@@) 37)))
(define rA02
  (cons (vector
          '(#(0.5566
                0.0449
                0.8296
                0.5125
                0.7673
                -0.3854
                -0.6538
                0.6397
                0.4041
                -9.1161
                -3.7679
                -2.9968)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(4.5778 6.6594 -4.0364) '() 3)
          '(#(4.922 7.1963 -4.9204) '() 3)
          '(#(3.7996 5.9091 -4.1764) '() 3)
          '(#(5.7873 5.8869 -3.5482) '() 3)
          '(#(6.0405 5.0875 -4.2446) '() 3)
          '(#(6.9135 6.8036 -3.431) '() 3)
          '(#(7.7293 6.4084 -2.3392) '() 3)
          '(#(8.7078 6.1815 -2.7624) '() 3)
          '(#(7.1305 5.1418 -1.7347) '() 3)
          '(#(7.204 5.1982 -0.6486) '() 3)
          '(#(7.7417 4.0392 -2.3813) '() 3)
          '(#(8.6785 4.1443 -2.563) '() 3)
          '(#(5.6666 5.2728 -2.1536) '() 3)
          '(#(5.1747 5.9805 -1.4863) '() 3)
          '(#(4.9997 4.0086 -2.1973) '() 3)
          '(#(10.3245 8.5459 1.5467) '() 3)
          '(#(9.8051 6.9432 -0.1497) '() 3)
          '(#(10.5175 7.4328 0.8408) '() 3)
          '(#(8.7523 7.7422 -0.4228) '() 3)
          '(#(8.4257 8.906 0.2099) '() 3)
          '(#(9.2665 9.3242 1.254) '() 3)
          '(#(9.0664 10.4462 1.961) '() 3)
          '(#(7.275 9.4537 -0.3428) '() 3)
          '(#(7.7962 7.5519 -1.3859) '() 3)
          '(#(6.9479 8.6157 -1.2771) '() 3)
          '(#(11.4063 6.9047 1.1859) '() 3)
          '(#(8.2845 11.0341 1.7552) '() 3)
          '(#(9.6584 10.6647 2.7198) '() 3)
          '(#(6.043 8.9853 -1.7594) '() 3))
        (cons '(@@-ra-@@) 37)))
(define rA03
  (cons (vector
          '(#(-0.5021
                0.0731
                0.8617
                -0.8112
                0.3054
                -0.4986
                -0.2996
                -0.9494
                -0.094
                6.4273
                -5.1944
                -3.7807)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(4.1214 6.7116 -1.9049) '() 3)
          '(#(3.3465 5.961 -2.0607) '() 3)
          '(#(4.0789 7.2928 -0.9837) '() 3)
          '(#(5.417 5.9293 -1.8186) '() 3)
          '(#(5.4506 5.34 -0.9023) '() 3)
          '(#(5.5067 5.0417 -2.9703) '() 3)
          '(#(6.865 4.9152 -3.3612) '() 3)
          '(#(7.109 3.8577 -3.2603) '() 3)
          '(#(7.7152 5.7282 -2.3894) '() 3)
          '(#(8.5029 6.2356 -2.9463) '() 3)
          '(#(8.1036 4.8568 -1.3419) '() 3)
          '(#(8.327 3.9651 -1.6184) '() 3)
          '(#(6.7003 6.7565 -1.8911) '() 3)
          '(#(6.5898 7.5329 -2.6482) '() 3)
          '(#(7.0505 7.2878 -0.6105) '() 3)
          '(#(9.674 4.7656 -7.6614) '() 3)
          '(#(9.0739 4.3013 -5.3941) '() 3)
          '(#(9.8416 4.2192 -6.4581) '() 3)
          '(#(7.9885 5.0632 -5.6446) '() 3)
          '(#(7.6822 5.6856 -6.8194) '() 3)
          '(#(8.5831 5.5215 -7.884) '() 3)
          '(#(8.4084 6.0747 -9.0933) '() 3)
          '(#(6.4857 6.3816 -6.7035) '() 3)
          '(#(6.974 5.3703 -4.776) '() 3)
          '(#(6.1133 6.1613 -5.4808) '() 3)
          '(#(10.7627 3.6375 -6.422) '() 3)
          '(#(7.6031 6.639 -9.2733) '() 3)
          '(#(9.1004 5.9708 -9.7893) '() 3)
          '(#(5.1705 6.683 -5.3167) '() 3))
        (cons '(@@-ra-@@) 37)))
(define rA04
  (cons (vector
          '(#(-0.5426
                -0.8175
                0.1929
                0.8304
                -0.5567
                -0.0237
                0.1267
                0.1473
                0.9809
                -0.5075
                8.3929
                0.2229)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(5.4352 8.2183 -2.7757) '() 3)
          '(#(5.383 8.7883 -1.8481) '() 3)
          '(#(5.7729 8.7436 -3.6691) '() 3)
          '(#(6.483 7.1518 -2.5252) '() 3)
          '(#(7.4749 7.5972 -2.4482) '() 3)
          '(#(6.1626 6.462 -1.2827) '() 3)
          '(#(6.5431 5.0992 -1.3905) '() 3)
          '(#(7.2871 4.9328 -0.6114) '() 3)
          '(#(7.1852 4.8935 -2.7592) '() 3)
          '(#(6.8573 3.9363 -3.1645) '() 3)
          '(#(8.578 5.1025 -2.6046) '() 3)
          '(#(8.9516 4.7577 -1.7902) '() 3)
          '(#(6.5522 6.03 -3.5612) '() 3)
          '(#(5.542 5.7356 -3.8459) '() 3)
          '(#(7.3487 6.4089 -4.6867) '() 3)
          '(#(3.6343 2.668 2.0783) '() 3)
          '(#(5.4505 3.9805 1.2446) '() 3)
          '(#(4.754 3.3816 2.1851) '() 3)
          '(#(4.8805 3.7951 0.0354) '() 3)
          '(#(3.7416 3.0925 -0.2305) '() 3)
          '(#(3.0873 2.498 0.8606) '() 3)
          '(#(1.96 1.7805 0.7462) '() 3)
          '(#(3.4605 3.1184 -1.5906) '() 3)
          '(#(5.3247 4.2695 -1.171) '() 3)
          '(#(4.4244 3.8244 -2.0953) '() 3)
          '(#(5.0814 3.4352 3.2234) '() 3)
          '(#(1.5423 1.6454 -0.152) '() 3)
          '(#(1.5716 1.3398 1.5392) '() 3)
          '(#(4.2675 3.8876 -3.1721) '() 3))
        (cons '(@@-ra-@@) 37)))
(define rA05
  (cons (vector
          '(#(-0.5891
                0.0449
                0.8068
                0.5375
                0.7673
                0.3498
                -0.6034
                0.6397
                -0.4762
                -0.3019
                -3.7679
                -9.5913)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(4.5778 6.6594 -4.0364) '() 3)
          '(#(4.922 7.1963 -4.9204) '() 3)
          '(#(3.7996 5.9091 -4.1764) '() 3)
          '(#(5.7873 5.8869 -3.5482) '() 3)
          '(#(6.0405 5.0875 -4.2446) '() 3)
          '(#(6.9135 6.8036 -3.431) '() 3)
          '(#(7.7293 6.4084 -2.3392) '() 3)
          '(#(8.7078 6.1815 -2.7624) '() 3)
          '(#(7.1305 5.1418 -1.7347) '() 3)
          '(#(7.204 5.1982 -0.6486) '() 3)
          '(#(7.7417 4.0392 -2.3813) '() 3)
          '(#(8.6785 4.1443 -2.563) '() 3)
          '(#(5.6666 5.2728 -2.1536) '() 3)
          '(#(5.1747 5.9805 -1.4863) '() 3)
          '(#(4.9997 4.0086 -2.1973) '() 3)
          '(#(10.2594 10.6774 -1.0056) '() 3)
          '(#(9.7528 8.708 -2.2631) '() 3)
          '(#(10.4471 9.7876 -1.9791) '() 3)
          '(#(8.7271 8.5575 -1.3991) '() 3)
          '(#(8.41 9.3803 -0.358) '() 3)
          '(#(9.2294 10.503 -0.1574) '() 3)
          '(#(9.0349 11.3951 0.825) '() 3)
          '(#(7.2891 8.9068 0.3121) '() 3)
          '(#(7.7962 7.5519 -1.3859) '() 3)
          '(#(6.9702 7.8292 -0.3353) '() 3)
          '(#(11.3132 10.0537 -2.5851) '() 3)
          '(#(8.2741 11.2784 1.4629) '() 3)
          '(#(9.6733 12.1368 0.9529) '() 3)
          '(#(6.0888 7.399 0.1403) '() 3))
        (cons '(@@-ra-@@) 37)))
(define rA06
  (cons (vector
          '(#(-0.9815
                0.0731
                -0.1772
                0.1912
                0.3054
                -0.9328
                -0.0141
                -0.9494
                -0.3137
                5.7506
                -5.1944
                4.747)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(4.1214 6.7116 -1.9049) '() 3)
          '(#(3.3465 5.961 -2.0607) '() 3)
          '(#(4.0789 7.2928 -0.9837) '() 3)
          '(#(5.417 5.9293 -1.8186) '() 3)
          '(#(5.4506 5.34 -0.9023) '() 3)
          '(#(5.5067 5.0417 -2.9703) '() 3)
          '(#(6.865 4.9152 -3.3612) '() 3)
          '(#(7.109 3.8577 -3.2603) '() 3)
          '(#(7.7152 5.7282 -2.3894) '() 3)
          '(#(8.5029 6.2356 -2.9463) '() 3)
          '(#(8.1036 4.8568 -1.3419) '() 3)
          '(#(8.327 3.9651 -1.6184) '() 3)
          '(#(6.7003 6.7565 -1.8911) '() 3)
          '(#(6.5898 7.5329 -2.6482) '() 3)
          '(#(7.0505 7.2878 -0.6105) '() 3)
          '(#(6.6624 3.5061 -8.2986) '() 3)
          '(#(6.581 3.257 -5.9221) '() 3)
          '(#(6.5151 2.8263 -7.1625) '() 3)
          '(#(6.8364 4.5817 -5.8882) '() 3)
          '(#(7.0116 5.4064 -6.9609) '() 3)
          '(#(6.9173 4.826 -8.2361) '() 3)
          '(#(7.0668 5.5163 -9.3763) '() 3)
          '(#(7.2573 6.707 -6.5394) '() 3)
          '(#(6.974 5.3703 -4.776) '() 3)
          '(#(7.2238 6.6275 -5.2453) '() 3)
          '(#(6.3146 1.7741 -7.3641) '() 3)
          '(#(7.2568 6.4972 -9.3456) '() 3)
          '(#(7.0437 5.0478 -10.2446) '() 3)
          '(#(7.4108 7.6227 -4.8418) '() 3))
        (cons '(@@-ra-@@) 37)))
(define rA07
  (cons (vector
          '(#(0.2379
                0.131
                -0.9624
                -0.5876
                -0.7696
                -0.2499
                -0.7734
                0.6249
                -0.1061
                30.987
                -26.9344
                42.6416)
             '()
             12)
          '(#(0.7529
                0.1548
                0.6397
                0.2952
                -0.9481
                -0.118
                0.5882
                0.2777
                -0.7595
                -58.8919
                -11.3095
                6.0866)
             '()
             12)
          '(#(-0.0239
                0.9667
                -0.2546
                0.9731
                -0.0359
                -0.2275
                -0.229
                -0.2532
                -0.9399
                3.5401
                -29.7913
                52.2796)
             '()
             12)
          '(#(-0.8912
                -0.4531
                0.0242
                -0.1183
                0.1805
                -0.9764
                0.438
                -0.873
                -0.2145
                19.9023
                54.8054
                15.2799)
             '()
             12)
          '(#(41.821 8.388 43.589) '() 3)
          '(#(42.54 8.045 44.833) '() 3)
          '(#(42.247 9.692 42.991) '() 3)
          '(#(40.255 8.203 43.734) '() 3)
          '(#(39.3505 8.4697 42.6565) '() 3)
          '(#(39.1377 7.5433 42.123) '() 3)
          '(#(39.7203 9.3119 42.0717) '() 3)
          '(#(38.0405 8.9195 43.2869) '() 3)
          '(#(37.3687 9.3036 42.5193) '() 3)
          '(#(37.4319 7.8146 43.9387) '() 3)
          '(#(37.1959 8.1354 45.3237) '() 3)
          '(#(36.1788 8.5202 45.397) '() 3)
          '(#(38.1721 9.2328 45.6504) '() 3)
          '(#(39.1555 8.7939 45.8188) '() 3)
          '(#(37.7862 10.0617 46.7013) '() 3)
          '(#(37.3087 9.6229 47.4092) '() 3)
          '(#(38.1844 10.0268 44.3367) '() 3)
          '(#(39.1578 10.5054 44.2289) '() 3)
          '(#(37.0547 10.9127 44.3441) '() 3)
          '(#(34.8811 4.2072 47.5784) '() 3)
          '(#(35.1084 6.1336 46.1818) '() 3)
          '(#(34.4108 5.136 46.7207) '() 3)
          '(#(36.3908 6.1224 46.6053) '() 3)
          '(#(36.9819 5.2334 47.4697) '() 3)
          '(#(36.1786 4.1985 48.0035) '() 3)
          '(#(36.6103 3.2749 48.8452) '() 3)
          '(#(38.3236 5.5522 47.6595) '() 3)
          '(#(37.3887 7.0024 46.2437) '() 3)
          '(#(38.5055 6.6096 46.9057) '() 3)
          '(#(33.3553 5.0152 46.4771) '() 3)
          '(#(37.573 3.2804 49.1507) '() 3)
          '(#(35.9775 2.5638 49.1828) '() 3)
          '(#(39.5461 6.9184 47.0041) '() 3))
        (cons '(@@-ra-@@) 37)))
(define rA08
  (cons (vector
          '(#(0.1084
                -0.0895
                -0.9901
                0.9789
                -0.1638
                0.122
                -0.1731
                -0.9824
                0.0698
                -2.9039
                47.2655
                33.0094)
             '()
             12)
          '(#(0.7529
                0.1548
                0.6397
                0.2952
                -0.9481
                -0.118
                0.5882
                0.2777
                -0.7595
                -58.8919
                -11.3095
                6.0866)
             '()
             12)
          '(#(-0.0239
                0.9667
                -0.2546
                0.9731
                -0.0359
                -0.2275
                -0.229
                -0.2532
                -0.9399
                3.5401
                -29.7913
                52.2796)
             '()
             12)
          '(#(-0.8912
                -0.4531
                0.0242
                -0.1183
                0.1805
                -0.9764
                0.438
                -0.873
                -0.2145
                19.9023
                54.8054
                15.2799)
             '()
             12)
          '(#(41.821 8.388 43.589) '() 3)
          '(#(42.54 8.045 44.833) '() 3)
          '(#(42.247 9.692 42.991) '() 3)
          '(#(40.255 8.203 43.734) '() 3)
          '(#(39.485 8.9301 44.6977) '() 3)
          '(#(39.0638 9.8199 44.2296) '() 3)
          '(#(40.0757 9.0713 45.6029) '() 3)
          '(#(38.3102 8.0414 45.0789) '() 3)
          '(#(37.7842 8.4637 45.9351) '() 3)
          '(#(37.42 7.9453 43.9769) '() 3)
          '(#(37.2249 6.5609 43.6273) '() 3)
          '(#(36.336 6.2168 44.1561) '() 3)
          '(#(38.4347 5.8414 44.159) '() 3)
          '(#(39.2688 5.9974 43.4749) '() 3)
          '(#(38.2344 4.4907 44.4348) '() 3)
          '(#(37.6374 4.0386 43.8341) '() 3)
          '(#(38.6926 6.6079 45.4637) '() 3)
          '(#(39.7585 6.564 45.6877) '() 3)
          '(#(37.8238 6.0705 46.4723) '() 3)
          '(#(33.9162 6.2598 39.7758) '() 3)
          '(#(34.6709 6.5759 42.0215) '() 3)
          '(#(33.7257 6.5186 41.0858) '() 3)
          '(#(35.8935 6.3324 41.5018) '() 3)
          '(#(36.2105 6.0601 40.1932) '() 3)
          '(#(35.1538 6.0151 39.2537) '() 3)
          '(#(35.3088 5.7642 37.9649) '() 3)
          '(#(37.5818 5.8677 40.0507) '() 3)
          '(#(37.0932 6.3197 42.181) '() 3)
          '(#(38.0509 6.0354 41.2635) '() 3)
          '(#(32.683 6.6898 41.3532) '() 3)
          '(#(36.2305 5.5855 37.5925) '() 3)
          '(#(34.5056 5.7512 37.3528) '() 3)
          '(#(39.1318 5.8993 41.2285) '() 3))
        (cons '(@@-ra-@@) 37)))
(define rA09
  (cons (vector
          '(#(0.8467
                0.4166
                -0.3311
                -0.3962
                0.9089
                0.1303
                0.3552
                0.0209
                0.9346
                -42.7319
                -26.6223
                -29.8163)
             '()
             12)
          '(#(0.7529
                0.1548
                0.6397
                0.2952
                -0.9481
                -0.118
                0.5882
                0.2777
                -0.7595
                -58.8919
                -11.3095
                6.0866)
             '()
             12)
          '(#(-0.0239
                0.9667
                -0.2546
                0.9731
                -0.0359
                -0.2275
                -0.229
                -0.2532
                -0.9399
                3.5401
                -29.7913
                52.2796)
             '()
             12)
          '(#(-0.8912
                -0.4531
                0.0242
                -0.1183
                0.1805
                -0.9764
                0.438
                -0.873
                -0.2145
                19.9023
                54.8054
                15.2799)
             '()
             12)
          '(#(41.821 8.388 43.589) '() 3)
          '(#(42.54 8.045 44.833) '() 3)
          '(#(42.247 9.692 42.991) '() 3)
          '(#(40.255 8.203 43.734) '() 3)
          '(#(39.3505 8.4697 42.6565) '() 3)
          '(#(39.1377 7.5433 42.123) '() 3)
          '(#(39.7203 9.3119 42.0717) '() 3)
          '(#(38.0405 8.9195 43.2869) '() 3)
          '(#(37.6479 8.1347 43.9335) '() 3)
          '(#(38.2691 10.0933 44.0524) '() 3)
          '(#(37.3999 11.1488 43.5973) '() 3)
          '(#(36.5061 11.1221 44.2206) '() 3)
          '(#(37.0364 10.7838 42.1836) '() 3)
          '(#(37.8636 11.0489 41.5252) '() 3)
          '(#(35.8275 11.3133 41.7379) '() 3)
          '(#(35.6214 12.1896 42.0714) '() 3)
          '(#(36.9316 9.2556 42.2837) '() 3)
          '(#(37.1778 8.826 41.3127) '() 3)
          '(#(35.6285 8.9334 42.7926) '() 3)
          '(#(38.1482 15.2833 46.4641) '() 3)
          '(#(37.3641 13.0968 45.9007) '() 3)
          '(#(37.5032 14.1288 46.73) '() 3)
          '(#(37.957 13.3377 44.7113) '() 3)
          '(#(38.6397 14.466 44.3267) '() 3)
          '(#(38.7473 15.5229 45.2609) '() 3)
          '(#(39.372 16.6649 45.0297) '() 3)
          '(#(39.1079 14.3351 43.0223) '() 3)
          '(#(38.0132 12.4868 43.628) '() 3)
          '(#(38.7058 13.1402 42.662) '() 3)
          '(#(37.0731 14.0857 47.7306) '() 3)
          '(#(39.8113 16.8281 44.135) '() 3)
          '(#(39.41 17.3741 45.7478) '() 3)
          '(#(39.0412 12.966 41.6397) '() 3))
        (cons '(@@-ra-@@) 37)))
(define rA10
  (cons (vector
          '(#(0.7063
                0.6317
                -0.3196
                -0.0403
                -0.4149
                -0.909
                -0.7068
                0.6549
                -0.2676
                6.4402
                -52.1496
                30.8246)
             '()
             12)
          '(#(0.7529
                0.1548
                0.6397
                0.2952
                -0.9481
                -0.118
                0.5882
                0.2777
                -0.7595
                -58.8919
                -11.3095
                6.0866)
             '()
             12)
          '(#(-0.0239
                0.9667
                -0.2546
                0.9731
                -0.0359
                -0.2275
                -0.229
                -0.2532
                -0.9399
                3.5401
                -29.7913
                52.2796)
             '()
             12)
          '(#(-0.8912
                -0.4531
                0.0242
                -0.1183
                0.1805
                -0.9764
                0.438
                -0.873
                -0.2145
                19.9023
                54.8054
                15.2799)
             '()
             12)
          '(#(41.821 8.388 43.589) '() 3)
          '(#(42.54 8.045 44.833) '() 3)
          '(#(42.247 9.692 42.991) '() 3)
          '(#(40.255 8.203 43.734) '() 3)
          '(#(39.485 8.9301 44.6977) '() 3)
          '(#(39.0638 9.8199 44.2296) '() 3)
          '(#(40.0757 9.0713 45.6029) '() 3)
          '(#(38.3102 8.0414 45.0789) '() 3)
          '(#(37.7099 7.8166 44.1973) '() 3)
          '(#(38.8012 6.8321 45.638) '() 3)
          '(#(38.2431 6.6413 46.9529) '() 3)
          '(#(37.3505 6.0262 46.8385) '() 3)
          '(#(37.8484 8.0156 47.4214) '() 3)
          '(#(38.7381 8.5406 47.769) '() 3)
          '(#(36.8286 8.0368 48.3701) '() 3)
          '(#(36.8392 7.3063 48.9929) '() 3)
          '(#(37.3576 8.6512 46.1132) '() 3)
          '(#(37.5207 9.7275 46.1671) '() 3)
          '(#(35.9985 8.2392 45.9032) '() 3)
          '(#(39.9117 2.2278 48.8527) '() 3)
          '(#(38.6207 3.6941 47.4757) '() 3)
          '(#(38.9872 2.4888 47.9057) '() 3)
          '(#(39.2961 4.672 48.1174) '() 3)
          '(#(40.2546 4.5307 49.0912) '() 3)
          '(#(40.5932 3.2189 49.4985) '() 3)
          '(#(41.4938 2.9317 50.4229) '() 3)
          '(#(40.7195 5.7755 49.506) '() 3)
          '(#(39.173 6.0305 47.917) '() 3)
          '(#(40.0413 6.625 48.7728) '() 3)
          '(#(38.5257 1.596 47.4838) '() 3)
          '(#(41.9907 3.6753 50.8921) '() 3)
          '(#(41.6848 1.9687 50.6599) '() 3)
          '(#(40.3571 7.6321 49.0452) '() 3))
        (cons '(@@-ra-@@) 37)))
(define rAs
  (list@1 rA01 rA02 rA03 rA04 rA05 rA06 rA07 rA08 rA09 rA10))
(define rC
  (cons (vector
          '(#(-0.0359
                -0.8071
                0.5894
                -0.2669
                0.5761
                0.7726
                -0.9631
                -0.1296
                -0.2361
                0.1584
                8.3434
                0.5434)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(5.243 -8.242 2.826) '() 3)
          '(#(5.1974 -8.8497 1.9223) '() 3)
          '(#(5.5548 -8.7348 3.7469) '() 3)
          '(#(6.314 -7.206 2.551) '() 3)
          '(#(7.2954 -7.6762 2.4898) '() 3)
          '(#(6.014 -6.542 1.289) '() 3)
          '(#(6.419 -5.184 1.362) '() 3)
          '(#(7.1608 -5.0495 0.5747) '() 3)
          '(#(7.076 -4.956 2.727) '() 3)
          '(#(6.777 -3.9803 3.1099) '() 3)
          '(#(8.45 -5.193 2.581) '() 3)
          '(#(8.8309 -4.8755 1.759) '() 3)
          '(#(6.406 -6.059 3.558) '() 3)
          '(#(5.4021 -5.7313 3.8281) '() 3)
          '(#(7.157 -6.424 4.707) '() 3)
          '(#(5.217 -4.326 1.169) '() 3)
          '(#(4.296 -2.256 0.629) '() 3)
          '(#(5.433 -3.02 0.799) '() 3)
          '(#(2.993 -2.678 0.794) '() 3)
          '(#(2.867 -4.063 1.183) '() 3)
          '(#(3.957 -4.83 1.355) '() 3)
          '(#(2.0187 -1.8047 0.5874) '() 3)
          '(#(6.547 -2.556 0.629) '() 3)
          '(#(1.0684 -2.1236 0.7109) '() 3)
          '(#(2.2344 -0.856 0.3162) '() 3)
          '(#(1.8797 -4.4972 1.3404) '() 3)
          '(#(3.8479 -5.8742 1.648) '() 3))
        (cons '(@@-rc-@@) 35)))
(define rC01
  (cons (vector
          '(#(-0.0137
                -0.8012
                0.5983
                -0.2523
                0.5817
                0.7733
                -0.9675
                -0.1404
                -0.2101
                0.2031
                8.3874
                0.4228)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(5.2416 -8.2422 2.8181) '() 3)
          '(#(5.205 -8.8128 1.8901) '() 3)
          '(#(5.5368 -8.7738 3.7227) '() 3)
          '(#(6.3232 -7.2037 2.6002) '() 3)
          '(#(7.3048 -7.6757 2.5577) '() 3)
          '(#(6.0635 -6.5092 1.3456) '() 3)
          '(#(6.4697 -5.1547 1.4629) '() 3)
          '(#(7.2354 -5.0043 0.7018) '() 3)
          '(#(7.0856 -4.961 2.8521) '() 3)
          '(#(6.7777 -3.9935 3.2487) '() 3)
          '(#(8.4627 -5.1992 2.7423) '() 3)
          '(#(8.8693 -4.8638 1.9399) '() 3)
          '(#(6.3877 -6.0809 3.6362) '() 3)
          '(#(5.377 -5.7562 3.8834) '() 3)
          '(#(7.1024 -6.4754 4.7985) '() 3)
          '(#(5.2764 -4.2883 1.2538) '() 3)
          '(#(4.3777 -2.2062 0.7229) '() 3)
          '(#(5.5069 -2.9779 0.9088) '() 3)
          '(#(3.0693 -2.6246 0.85) '() 3)
          '(#(2.9279 -4.0146 1.2149) '() 3)
          '(#(4.0101 -4.7892 1.4017) '() 3)
          '(#(2.104 -1.7437 0.6331) '() 3)
          '(#(6.6267 -2.5166 0.7728) '() 3)
          '(#(1.1496 -2.06 0.7287) '() 3)
          '(#(2.3303 -0.7921 0.3815) '() 3)
          '(#(1.9353 -4.4465 1.3419) '() 3)
          '(#(3.8895 -5.8371 1.6762) '() 3))
        (cons '(@@-rc-@@) 35)))
(define rC02
  (cons (vector
          '(#(0.5141
                0.0246
                0.8574
                -0.5547
                -0.7529
                0.3542
                0.6542
                -0.6577
                -0.3734
                -9.1111
                -3.4598
                -3.2939)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(4.3825 -6.6585 4.0489) '() 3)
          '(#(4.6841 -7.2019 4.9443) '() 3)
          '(#(3.6189 -5.8889 4.1625) '() 3)
          '(#(5.6255 -5.9175 3.5998) '() 3)
          '(#(5.8732 -5.1228 4.3034) '() 3)
          '(#(6.7337 -6.8605 3.5222) '() 3)
          '(#(7.5932 -6.4923 2.4548) '() 3)
          '(#(8.5661 -6.2983 2.9064) '() 3)
          '(#(7.0527 -5.2012 1.8322) '() 3)
          '(#(7.1627 -5.2525 0.749) '() 3)
          '(#(7.6666 -4.1249 2.488) '() 3)
          '(#(8.5944 -4.2543 2.6981) '() 3)
          '(#(5.5661 -5.3029 2.2009) '() 3)
          '(#(5.0841 -6.0018 1.5172) '() 3)
          '(#(4.9062 -4.0452 2.2042) '() 3)
          '(#(7.6298 -7.6136 1.4752) '() 3)
          '(#(8.6945 -8.7046 -0.2857) '() 3)
          '(#(8.6943 -7.6514 0.6066) '() 3)
          '(#(7.7426 -9.6987 -0.3801) '() 3)
          '(#(6.6642 -9.5742 0.5722) '() 3)
          '(#(6.6391 -8.5592 1.4526) '() 3)
          '(#(7.9033 -10.6371 -1.301) '() 3)
          '(#(9.584 -6.8186 0.6136) '() 3)
          '(#(7.2009 -11.3604 -1.3619) '() 3)
          '(#(8.7058 -10.6168 -1.914) '() 3)
          '(#(5.8585 -10.3083 0.5822) '() 3)
          '(#(5.8197 -8.4773 2.1667) '() 3))
        (cons '(@@-rc-@@) 35)))
(define rC03
  (cons (vector
          '(#(-0.4993
                0.0476
                0.8651
                0.8078
                -0.3353
                0.4847
                0.3132
                0.9409
                0.129
                6.2989
                -5.2303
                -3.8577)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(3.9938 -6.7042 1.9023) '() 3)
          '(#(3.2332 -5.9343 2.0319) '() 3)
          '(#(3.9666 -7.2863 0.9812) '() 3)
          '(#(5.3098 -5.9546 1.8564) '() 3)
          '(#(5.3863 -5.3702 0.9395) '() 3)
          '(#(5.3851 -5.0642 3.0076) '() 3)
          '(#(6.7315 -4.9724 3.4462) '() 3)
          '(#(7.0033 -3.9202 3.3619) '() 3)
          '(#(7.5997 -5.8018 2.4948) '() 3)
          '(#(8.3627 -6.3254 3.0707) '() 3)
          '(#(8.041 -4.9501 1.4724) '() 3)
          '(#(8.2781 -4.0644 1.757) '() 3)
          '(#(6.5701 -6.8129 1.9714) '() 3)
          '(#(6.4186 -7.5809 2.7299) '() 3)
          '(#(6.9357 -7.3841 0.7235) '() 3)
          '(#(6.8024 -5.4718 4.8475) '() 3)
          '(#(7.9218 -5.57 6.8877) '() 3)
          '(#(7.8908 -5.0886 5.5944) '() 3)
          '(#(6.9789 -6.3827 7.4823) '() 3)
          '(#(5.8742 -6.7319 6.6202) '() 3)
          '(#(5.8182 -6.2769 5.357) '() 3)
          '(#(7.1702 -6.7511 8.7402) '() 3)
          '(#(8.7747 -4.3728 5.1568) '() 3)
          '(#(6.4741 -7.3461 9.1662) '() 3)
          '(#(7.9889 -6.4396 9.2429) '() 3)
          '(#(5.0736 -7.3713 6.9922) '() 3)
          '(#(4.9784 -6.5473 4.717) '() 3))
        (cons '(@@-rc-@@) 35)))
(define rC04
  (cons (vector
          '(#(-0.5669
                -0.8012
                0.1918
                -0.8129
                0.5817
                0.0273
                -0.1334
                -0.1404
                -0.9811
                -0.3279
                8.3874
                0.3355)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(5.2416 -8.2422 2.8181) '() 3)
          '(#(5.205 -8.8128 1.8901) '() 3)
          '(#(5.5368 -8.7738 3.7227) '() 3)
          '(#(6.3232 -7.2037 2.6002) '() 3)
          '(#(7.3048 -7.6757 2.5577) '() 3)
          '(#(6.0635 -6.5092 1.3456) '() 3)
          '(#(6.4697 -5.1547 1.4629) '() 3)
          '(#(7.2354 -5.0043 0.7018) '() 3)
          '(#(7.0856 -4.961 2.8521) '() 3)
          '(#(6.7777 -3.9935 3.2487) '() 3)
          '(#(8.4627 -5.1992 2.7423) '() 3)
          '(#(8.8693 -4.8638 1.9399) '() 3)
          '(#(6.3877 -6.0809 3.6362) '() 3)
          '(#(5.377 -5.7562 3.8834) '() 3)
          '(#(7.1024 -6.4754 4.7985) '() 3)
          '(#(5.2764 -4.2883 1.2538) '() 3)
          '(#(3.8961 -3.0896 -0.1893) '() 3)
          '(#(5.0095 -3.8907 -0.0346) '() 3)
          '(#(3.048 -2.6632 0.8116) '() 3)
          '(#(3.4093 -3.131 2.1292) '() 3)
          '(#(4.4878 -3.9124 2.3088) '() 3)
          '(#(2.0216 -1.8941 0.4804) '() 3)
          '(#(5.7005 -4.2164 -0.9842) '() 3)
          '(#(1.4067 -1.5873 1.2205) '() 3)
          '(#(1.8721 -1.6319 -0.4835) '() 3)
          '(#(2.8048 -2.8507 2.9918) '() 3)
          '(#(4.7491 -4.2593 3.3085) '() 3))
        (cons '(@@-rc-@@) 35)))
(define rC05
  (cons (vector
          '(#(-0.6298
                0.0246
                0.7763
                -0.5226
                -0.7529
                -0.4001
                0.5746
                -0.6577
                0.487
                -0.0208
                -3.4598
                -9.6882)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(4.3825 -6.6585 4.0489) '() 3)
          '(#(4.6841 -7.2019 4.9443) '() 3)
          '(#(3.6189 -5.8889 4.1625) '() 3)
          '(#(5.6255 -5.9175 3.5998) '() 3)
          '(#(5.8732 -5.1228 4.3034) '() 3)
          '(#(6.7337 -6.8605 3.5222) '() 3)
          '(#(7.5932 -6.4923 2.4548) '() 3)
          '(#(8.5661 -6.2983 2.9064) '() 3)
          '(#(7.0527 -5.2012 1.8322) '() 3)
          '(#(7.1627 -5.2525 0.749) '() 3)
          '(#(7.6666 -4.1249 2.488) '() 3)
          '(#(8.5944 -4.2543 2.6981) '() 3)
          '(#(5.5661 -5.3029 2.2009) '() 3)
          '(#(5.0841 -6.0018 1.5172) '() 3)
          '(#(4.9062 -4.0452 2.2042) '() 3)
          '(#(7.6298 -7.6136 1.4752) '() 3)
          '(#(8.5977 -9.5977 0.7329) '() 3)
          '(#(8.5951 -8.5745 1.6594) '() 3)
          '(#(7.7372 -9.7371 -0.3364) '() 3)
          '(#(6.7596 -8.6801 -0.4476) '() 3)
          '(#(6.7338 -7.6721 0.4408) '() 3)
          '(#(7.8849 -10.7881 -1.1289) '() 3)
          '(#(9.3993 -8.5377 2.5743) '() 3)
          '(#(7.2499 -10.8809 -1.9088) '() 3)
          '(#(8.6122 -11.4649 -0.9468) '() 3)
          '(#(6.0317 -8.6941 -1.2588) '() 3)
          '(#(5.9901 -6.8809 0.3459) '() 3))
        (cons '(@@-rc-@@) 35)))
(define rC06
  (cons (vector
          '(#(-0.9837
                0.0476
                -0.1733
                -0.1792
                -0.3353
                0.9249
                -0.0141
                0.9409
                0.3384
                5.7793
                -5.2303
                4.5997)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(3.9938 -6.7042 1.9023) '() 3)
          '(#(3.2332 -5.9343 2.0319) '() 3)
          '(#(3.9666 -7.2863 0.9812) '() 3)
          '(#(5.3098 -5.9546 1.8564) '() 3)
          '(#(5.3863 -5.3702 0.9395) '() 3)
          '(#(5.3851 -5.0642 3.0076) '() 3)
          '(#(6.7315 -4.9724 3.4462) '() 3)
          '(#(7.0033 -3.9202 3.3619) '() 3)
          '(#(7.5997 -5.8018 2.4948) '() 3)
          '(#(8.3627 -6.3254 3.0707) '() 3)
          '(#(8.041 -4.9501 1.4724) '() 3)
          '(#(8.2781 -4.0644 1.757) '() 3)
          '(#(6.5701 -6.8129 1.9714) '() 3)
          '(#(6.4186 -7.5809 2.7299) '() 3)
          '(#(6.9357 -7.3841 0.7235) '() 3)
          '(#(6.8024 -5.4718 4.8475) '() 3)
          '(#(6.692 -5.0495 7.1354) '() 3)
          '(#(6.6201 -4.55 5.8506) '() 3)
          '(#(6.9254 -6.3614 7.4926) '() 3)
          '(#(7.1046 -7.2543 6.3718) '() 3)
          '(#(7.0391 -6.7951 5.1106) '() 3)
          '(#(6.9614 -6.6648 8.7815) '() 3)
          '(#(6.4083 -3.3696 5.634) '() 3)
          '(#(7.1329 -7.628 9.0324) '() 3)
          '(#(6.8204 -5.9469 9.4777) '() 3)
          '(#(7.2954 -8.3135 6.544) '() 3)
          '(#(7.1753 -7.4798 4.2735) '() 3))
        (cons '(@@-rc-@@) 35)))
(define rC07
  (cons (vector
          '(#(0.0033
                0.272
                -0.9623
                0.3013
                -0.9179
                -0.2584
                -0.9535
                -0.2891
                -0.085
                43.0403
                13.7233
                34.571)
             '()
             12)
          '(#(0.9187
                0.2887
                0.2694
                0.0302
                -0.7316
                0.6811
                0.3938
                -0.6176
                -0.6808
                -48.433
                26.3254
                13.6383)
             '()
             12)
          '(#(-0.1504
                0.7744
                -0.6145
                0.7581
                0.4893
                0.4311
                0.6345
                -0.401
                -0.6607
                -31.9784
                -13.4285
                44.965)
             '()
             12)
          '(#(-0.6236
                -0.781
                -0.0337
                -0.689
                0.5694
                -0.4484
                0.3694
                -0.2564
                -0.8932
                12.1105
                30.8774
                46.0946)
             '()
             12)
          '(#(33.34 11.098 46.175) '() 3)
          '(#(34.513 10.232 46.466) '() 3)
          '(#(33.413 12.396 46.934) '() 3)
          '(#(31.981 10.339 46.482) '() 3)
          '(#(30.8152 11.1619 46.2003) '() 3)
          '(#(30.4519 10.9454 45.1957) '() 3)
          '(#(31.0379 12.2016 46.44) '() 3)
          '(#(29.7081 10.7448 47.1428) '() 3)
          '(#(28.871 11.4416 47.0982) '() 3)
          '(#(29.255 9.4394 46.8162) '() 3)
          '(#(29.3907 8.5625 47.946) '() 3)
          '(#(28.4416 8.5669 48.4819) '() 3)
          '(#(30.4468 9.2031 48.7952) '() 3)
          '(#(31.4222 8.9651 48.3709) '() 3)
          '(#(30.3701 8.9157 50.1624) '() 3)
          '(#(30.0652 8.0304 50.374) '() 3)
          '(#(30.1622 10.6879 48.612) '() 3)
          '(#(31.0952 11.2399 48.7254) '() 3)
          '(#(29.1076 11.1535 49.4702) '() 3)
          '(#(29.7883 7.2209 47.5235) '() 3)
          '(#(29.1825 5.0438 46.8275) '() 3)
          '(#(28.8008 6.2912 47.2263) '() 3)
          '(#(30.4888 4.689 46.7186) '() 3)
          '(#(31.5034 5.6405 47.0249) '() 3)
          '(#(31.1091 6.8691 47.4156) '() 3)
          '(#(30.8109 3.4584 46.3336) '() 3)
          '(#(27.6171 6.5989 47.3189) '() 3)
          '(#(31.7923 3.2301 46.2638) '() 3)
          '(#(30.088 2.7857 46.1215) '() 3)
          '(#(32.5542 5.3634 46.9395) '() 3)
          '(#(31.8523 7.6279 47.6603) '() 3))
        (cons '(@@-rc-@@) 35)))
(define rC08
  (cons (vector
          '(#(0.0797
                -0.6026
                -0.7941
                0.7939
                0.5201
                -0.315
                0.6028
                -0.6054
                0.5198
                -36.8341
                41.5293
                1.6628)
             '()
             12)
          '(#(0.9187
                0.2887
                0.2694
                0.0302
                -0.7316
                0.6811
                0.3938
                -0.6176
                -0.6808
                -48.433
                26.3254
                13.6383)
             '()
             12)
          '(#(-0.1504
                0.7744
                -0.6145
                0.7581
                0.4893
                0.4311
                0.6345
                -0.401
                -0.6607
                -31.9784
                -13.4285
                44.965)
             '()
             12)
          '(#(-0.6236
                -0.781
                -0.0337
                -0.689
                0.5694
                -0.4484
                0.3694
                -0.2564
                -0.8932
                12.1105
                30.8774
                46.0946)
             '()
             12)
          '(#(33.34 11.098 46.175) '() 3)
          '(#(34.513 10.232 46.466) '() 3)
          '(#(33.413 12.396 46.934) '() 3)
          '(#(31.981 10.339 46.482) '() 3)
          '(#(31.8779 9.9369 47.876) '() 3)
          '(#(31.3239 10.6931 48.4322) '() 3)
          '(#(32.8647 9.6624 48.2489) '() 3)
          '(#(31.0429 8.6773 47.9401) '() 3)
          '(#(31.0779 8.2331 48.9349) '() 3)
          '(#(29.6956 8.9669 47.5983) '() 3)
          '(#(29.2784 8.17 46.4782) '() 3)
          '(#(28.8006 7.2731 46.8722) '() 3)
          '(#(30.5544 7.794 45.7875) '() 3)
          '(#(30.8837 8.641 45.1856) '() 3)
          '(#(30.51 6.6007 45.0582) '() 3)
          '(#(29.6694 6.4168 44.6326) '() 3)
          '(#(31.5146 7.5954 46.9527) '() 3)
          '(#(32.5255 7.8261 46.6166) '() 3)
          '(#(31.3876 6.2951 47.5516) '() 3)
          '(#(28.3976 8.9302 45.5933) '() 3)
          '(#(26.2155 9.6135 44.991) '() 3)
          '(#(27.0281 8.8961 45.8192) '() 3)
          '(#(26.7044 10.3489 43.9595) '() 3)
          '(#(28.1088 10.3837 43.7247) '() 3)
          '(#(28.8978 9.6708 44.5535) '() 3)
          '(#(25.8715 11.0249 43.1749) '() 3)
          '(#(26.5733 8.2371 46.7484) '() 3)
          '(#(26.2707 11.5609 42.4177) '() 3)
          '(#(24.876 10.9939 43.3427) '() 3)
          '(#(28.5089 10.9722 42.899) '() 3)
          '(#(29.9782 9.6687 44.4097) '() 3))
        (cons '(@@-rc-@@) 35)))
(define rC09
  (cons (vector
          '(#(0.8727
                0.476
                -0.1091
                -0.4188
                0.6148
                -0.6682
                -0.251
                0.6289
                0.7359
                -8.1687
                -52.0761
                -25.0726)
             '()
             12)
          '(#(0.9187
                0.2887
                0.2694
                0.0302
                -0.7316
                0.6811
                0.3938
                -0.6176
                -0.6808
                -48.433
                26.3254
                13.6383)
             '()
             12)
          '(#(-0.1504
                0.7744
                -0.6145
                0.7581
                0.4893
                0.4311
                0.6345
                -0.401
                -0.6607
                -31.9784
                -13.4285
                44.965)
             '()
             12)
          '(#(-0.6236
                -0.781
                -0.0337
                -0.689
                0.5694
                -0.4484
                0.3694
                -0.2564
                -0.8932
                12.1105
                30.8774
                46.0946)
             '()
             12)
          '(#(33.34 11.098 46.175) '() 3)
          '(#(34.513 10.232 46.466) '() 3)
          '(#(33.413 12.396 46.934) '() 3)
          '(#(31.981 10.339 46.482) '() 3)
          '(#(30.8152 11.1619 46.2003) '() 3)
          '(#(30.4519 10.9454 45.1957) '() 3)
          '(#(31.0379 12.2016 46.44) '() 3)
          '(#(29.7081 10.7448 47.1428) '() 3)
          '(#(29.4506 9.6945 47.0059) '() 3)
          '(#(30.1045 10.9634 48.4885) '() 3)
          '(#(29.1794 11.8418 49.149) '() 3)
          '(#(28.4388 11.221 49.6533) '() 3)
          '(#(28.5211 12.6008 48.0367) '() 3)
          '(#(29.1947 13.3949 47.7147) '() 3)
          '(#(27.2316 13.0683 48.3134) '() 3)
          '(#(27.0851 13.3391 49.2227) '() 3)
          '(#(28.4131 11.5507 46.9391) '() 3)
          '(#(28.4451 12.0512 45.9713) '() 3)
          '(#(27.2707 10.6955 47.1097) '() 3)
          '(#(29.8751 12.7405 50.0682) '() 3)
          '(#(30.7172 13.1841 52.2328) '() 3)
          '(#(30.0617 12.3404 51.3847) '() 3)
          '(#(31.1834 14.3941 51.8297) '() 3)
          '(#(30.9913 14.8074 50.4803) '() 3)
          '(#(30.3434 13.961 49.6548) '() 3)
          '(#(31.809 15.1847 52.6957) '() 3)
          '(#(29.647 11.2494 51.7616) '() 3)
          '(#(32.1422 16.0774 52.3606) '() 3)
          '(#(31.9392 14.8893 53.6527) '() 3)
          '(#(31.3632 15.7771 50.1491) '() 3)
          '(#(30.1742 14.2374 48.6141) '() 3))
        (cons '(@@-rc-@@) 35)))
(define rC10
  (cons (vector
          '(#(0.1549
                0.871
                -0.4663
                0.6768
                -0.4374
                -0.5921
                -0.7197
                -0.2239
                -0.6572
                25.2447
                -14.192
                50.3201)
             '()
             12)
          '(#(0.9187
                0.2887
                0.2694
                0.0302
                -0.7316
                0.6811
                0.3938
                -0.6176
                -0.6808
                -48.433
                26.3254
                13.6383)
             '()
             12)
          '(#(-0.1504
                0.7744
                -0.6145
                0.7581
                0.4893
                0.4311
                0.6345
                -0.401
                -0.6607
                -31.9784
                -13.4285
                44.965)
             '()
             12)
          '(#(-0.6236
                -0.781
                -0.0337
                -0.689
                0.5694
                -0.4484
                0.3694
                -0.2564
                -0.8932
                12.1105
                30.8774
                46.0946)
             '()
             12)
          '(#(33.34 11.098 46.175) '() 3)
          '(#(34.513 10.232 46.466) '() 3)
          '(#(33.413 12.396 46.934) '() 3)
          '(#(31.981 10.339 46.482) '() 3)
          '(#(31.8779 9.9369 47.876) '() 3)
          '(#(31.3239 10.6931 48.4322) '() 3)
          '(#(32.8647 9.6624 48.2489) '() 3)
          '(#(31.0429 8.6773 47.9401) '() 3)
          '(#(30.044 8.8473 47.5383) '() 3)
          '(#(31.6749 7.6351 47.2119) '() 3)
          '(#(31.9159 6.5022 48.0616) '() 3)
          '(#(31.0691 5.8243 47.9544) '() 3)
          '(#(31.93 7.0685 49.4493) '() 3)
          '(#(32.9024 7.5288 49.6245) '() 3)
          '(#(31.5672 6.175 50.4632) '() 3)
          '(#(31.8416 5.2663 50.32) '() 3)
          '(#(30.8618 8.1514 49.3749) '() 3)
          '(#(31.1122 8.9396 50.085) '() 3)
          '(#(29.5351 7.6245 49.5409) '() 3)
          '(#(33.189 5.8629 47.7343) '() 3)
          '(#(34.4004 4.2636 46.4828) '() 3)
          '(#(33.2062 4.8497 46.7851) '() 3)
          '(#(35.56 4.6374 47.0822) '() 3)
          '(#(35.5444 5.6751 48.0577) '() 3)
          '(#(34.3565 6.245 48.3432) '() 3)
          '(#(36.6977 4.0305 46.7598) '() 3)
          '(#(32.1661 4.5034 46.2348) '() 3)
          '(#(37.5405 4.3347 47.2259) '() 3)
          '(#(36.7033 3.2923 46.0706) '() 3)
          '(#(36.4713 5.9811 48.5428) '() 3)
          '(#(34.2986 7.0426 49.0839) '() 3))
        (cons '(@@-rc-@@) 35)))
(define rCs
  (list@1 rC01 rC02 rC03 rC04 rC05 rC06 rC07 rC08 rC09 rC10))
(define rG
  (cons (vector
          '(#(-0.0018
                -0.8207
                0.5714
                0.2679
                -0.5509
                -0.7904
                0.9634
                0.1517
                0.2209
                0.0073
                8.403
                0.6232)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(5.455 8.212 -2.881) '() 3)
          '(#(5.4546 8.8508 -1.9978) '() 3)
          '(#(5.7588 8.6625 -3.8259) '() 3)
          '(#(6.497 7.148 -2.598) '() 3)
          '(#(7.4896 7.5919 -2.5214) '() 3)
          '(#(6.163 6.486 -1.344) '() 3)
          '(#(6.54 5.12 -1.419) '() 3)
          '(#(7.2763 4.9681 -0.6297) '() 3)
          '(#(7.194 4.883 -2.777) '() 3)
          '(#(6.8667 3.9183 -3.1647) '() 3)
          '(#(8.586 5.091 -2.614) '() 3)
          '(#(8.951 4.7626 -1.789) '() 3)
          '(#(6.572 6.004 -3.609) '() 3)
          '(#(5.5636 5.7066 -3.8966) '() 3)
          '(#(7.3801 6.3562 -4.735) '() 3)
          '(#(4.715 0.491 -0.136) '() 3)
          '(#(6.349 2.173 -0.602) '() 3)
          '(#(5.953 0.965 -0.267) '() 3)
          '(#(5.29 2.979 -0.826) '() 3)
          '(#(3.972 2.639 -0.733) '() 3)
          '(#(3.677 1.316 -0.366) '() 3)
          '(#(6.8426 0.0056 -0.0019) '() 3)
          '(#(3.166 3.729 -1.036) '() 3)
          '(#(5.317 4.299 -1.193) '() 3)
          '(#(4.01 4.678 -1.299) '() 3)
          '(#(2.428 0.845 -0.236) '() 3)
          '(#(4.6151 -0.4677 0.1305) '() 3)
          '(#(6.6463 -0.9463 0.2729) '() 3)
          '(#(7.817 0.2642 -0.064) '() 3)
          '(#(3.4421 5.5744 -1.5482) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rG01
  (cons (vector
          '(#(-0.0043
                -0.8175
                0.5759
                0.2617
                -0.5567
                -0.7884
                0.9651
                0.1473
                0.2164
                0.0359
                8.3929
                0.5532)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(5.4352 8.2183 -2.7757) '() 3)
          '(#(5.383 8.7883 -1.8481) '() 3)
          '(#(5.7729 8.7436 -3.6691) '() 3)
          '(#(6.483 7.1518 -2.5252) '() 3)
          '(#(7.4749 7.5972 -2.4482) '() 3)
          '(#(6.1626 6.462 -1.2827) '() 3)
          '(#(6.5431 5.0992 -1.3905) '() 3)
          '(#(7.2871 4.9328 -0.6114) '() 3)
          '(#(7.1852 4.8935 -2.7592) '() 3)
          '(#(6.8573 3.9363 -3.1645) '() 3)
          '(#(8.578 5.1025 -2.6046) '() 3)
          '(#(8.9516 4.7577 -1.7902) '() 3)
          '(#(6.5522 6.03 -3.5612) '() 3)
          '(#(5.542 5.7356 -3.8459) '() 3)
          '(#(7.3487 6.4089 -4.6867) '() 3)
          '(#(4.7442 0.4514 -0.139) '() 3)
          '(#(6.3687 2.1459 -0.5926) '() 3)
          '(#(5.9795 0.9335 -0.2657) '() 3)
          '(#(5.3052 2.9471 -0.8125) '() 3)
          '(#(3.9891 2.5987 -0.723) '() 3)
          '(#(3.7016 1.2717 -0.3647) '() 3)
          '(#(6.8745 -0.0224 -0.0058) '() 3)
          '(#(3.177 3.6859 -1.0198) '() 3)
          '(#(5.3247 4.2695 -1.171) '() 3)
          '(#(4.0156 4.6415 -1.2759) '() 3)
          '(#(2.4553 0.7925 -0.239) '() 3)
          '(#(4.6497 -0.5095 0.1212) '() 3)
          '(#(6.6836 -0.9771 0.2627) '() 3)
          '(#(7.8474 0.2424 -0.0653) '() 3)
          '(#(3.4426 5.5361 -1.5199) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rG02
  (cons (vector
          '(#(0.5566
                0.0449
                0.8296
                0.5125
                0.7673
                -0.3854
                -0.6538
                0.6397
                0.4041
                -9.1161
                -3.7679
                -2.9968)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(4.5778 6.6594 -4.0364) '() 3)
          '(#(4.922 7.1963 -4.9204) '() 3)
          '(#(3.7996 5.9091 -4.1764) '() 3)
          '(#(5.7873 5.8869 -3.5482) '() 3)
          '(#(6.0405 5.0875 -4.2446) '() 3)
          '(#(6.9135 6.8036 -3.431) '() 3)
          '(#(7.7293 6.4084 -2.3392) '() 3)
          '(#(8.7078 6.1815 -2.7624) '() 3)
          '(#(7.1305 5.1418 -1.7347) '() 3)
          '(#(7.204 5.1982 -0.6486) '() 3)
          '(#(7.7417 4.0392 -2.3813) '() 3)
          '(#(8.6785 4.1443 -2.563) '() 3)
          '(#(5.6666 5.2728 -2.1536) '() 3)
          '(#(5.1747 5.9805 -1.4863) '() 3)
          '(#(4.9997 4.0086 -2.1973) '() 3)
          '(#(10.3245 8.5459 1.5467) '() 3)
          '(#(9.8051 6.9432 -0.1497) '() 3)
          '(#(10.5175 7.4328 0.8408) '() 3)
          '(#(8.7523 7.7422 -0.4228) '() 3)
          '(#(8.4257 8.906 0.2099) '() 3)
          '(#(9.2665 9.3242 1.254) '() 3)
          '(#(11.6077 6.7966 1.2752) '() 3)
          '(#(7.275 9.4537 -0.3428) '() 3)
          '(#(7.7962 7.5519 -1.3859) '() 3)
          '(#(6.9479 8.6157 -1.2771) '() 3)
          '(#(9.0664 10.4462 1.961) '() 3)
          '(#(10.9838 8.7524 2.2697) '() 3)
          '(#(12.2274 7.0896 2.017) '() 3)
          '(#(11.8502 5.9398 0.7984) '() 3)
          '(#(6.043 8.9853 -1.7594) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rG03
  (cons (vector
          '(#(-0.5021
                0.0731
                0.8617
                -0.8112
                0.3054
                -0.4986
                -0.2996
                -0.9494
                -0.094
                6.4273
                -5.1944
                -3.7807)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(4.1214 6.7116 -1.9049) '() 3)
          '(#(3.3465 5.961 -2.0607) '() 3)
          '(#(4.0789 7.2928 -0.9837) '() 3)
          '(#(5.417 5.9293 -1.8186) '() 3)
          '(#(5.4506 5.34 -0.9023) '() 3)
          '(#(5.5067 5.0417 -2.9703) '() 3)
          '(#(6.865 4.9152 -3.3612) '() 3)
          '(#(7.109 3.8577 -3.2603) '() 3)
          '(#(7.7152 5.7282 -2.3894) '() 3)
          '(#(8.5029 6.2356 -2.9463) '() 3)
          '(#(8.1036 4.8568 -1.3419) '() 3)
          '(#(8.327 3.9651 -1.6184) '() 3)
          '(#(6.7003 6.7565 -1.8911) '() 3)
          '(#(6.5898 7.5329 -2.6482) '() 3)
          '(#(7.0505 7.2878 -0.6105) '() 3)
          '(#(9.674 4.7656 -7.6614) '() 3)
          '(#(9.0739 4.3013 -5.3941) '() 3)
          '(#(9.8416 4.2192 -6.4581) '() 3)
          '(#(7.9885 5.0632 -5.6446) '() 3)
          '(#(7.6822 5.6856 -6.8194) '() 3)
          '(#(8.5831 5.5215 -7.884) '() 3)
          '(#(10.9733 3.5117 -6.4286) '() 3)
          '(#(6.4857 6.3816 -6.7035) '() 3)
          '(#(6.974 5.3703 -4.776) '() 3)
          '(#(6.1133 6.1613 -5.4808) '() 3)
          '(#(8.4084 6.0747 -9.0933) '() 3)
          '(#(10.3759 4.5855 -8.3504) '() 3)
          '(#(11.6254 3.3761 -7.1879) '() 3)
          '(#(11.1917 3.046 -5.5593) '() 3)
          '(#(5.1705 6.683 -5.3167) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rG04
  (cons (vector
          '(#(-0.5426
                -0.8175
                0.1929
                0.8304
                -0.5567
                -0.0237
                0.1267
                0.1473
                0.9809
                -0.5075
                8.3929
                0.2229)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(5.4352 8.2183 -2.7757) '() 3)
          '(#(5.383 8.7883 -1.8481) '() 3)
          '(#(5.7729 8.7436 -3.6691) '() 3)
          '(#(6.483 7.1518 -2.5252) '() 3)
          '(#(7.4749 7.5972 -2.4482) '() 3)
          '(#(6.1626 6.462 -1.2827) '() 3)
          '(#(6.5431 5.0992 -1.3905) '() 3)
          '(#(7.2871 4.9328 -0.6114) '() 3)
          '(#(7.1852 4.8935 -2.7592) '() 3)
          '(#(6.8573 3.9363 -3.1645) '() 3)
          '(#(8.578 5.1025 -2.6046) '() 3)
          '(#(8.9516 4.7577 -1.7902) '() 3)
          '(#(6.5522 6.03 -3.5612) '() 3)
          '(#(5.542 5.7356 -3.8459) '() 3)
          '(#(7.3487 6.4089 -4.6867) '() 3)
          '(#(3.6343 2.668 2.0783) '() 3)
          '(#(5.4505 3.9805 1.2446) '() 3)
          '(#(4.754 3.3816 2.1851) '() 3)
          '(#(4.8805 3.7951 0.0354) '() 3)
          '(#(3.7416 3.0925 -0.2305) '() 3)
          '(#(3.0873 2.498 0.8606) '() 3)
          '(#(5.1433 3.4373 3.4609) '() 3)
          '(#(3.4605 3.1184 -1.5906) '() 3)
          '(#(5.3247 4.2695 -1.171) '() 3)
          '(#(4.4244 3.8244 -2.0953) '() 3)
          '(#(1.96 1.7805 0.7462) '() 3)
          '(#(3.2489 2.2879 2.9191) '() 3)
          '(#(4.6785 3.0243 4.2568) '() 3)
          '(#(5.9823 3.9654 3.6539) '() 3)
          '(#(4.2675 3.8876 -3.1721) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rG05
  (cons (vector
          '(#(-0.5891
                0.0449
                0.8068
                0.5375
                0.7673
                0.3498
                -0.6034
                0.6397
                -0.4762
                -0.3019
                -3.7679
                -9.5913)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(4.5778 6.6594 -4.0364) '() 3)
          '(#(4.922 7.1963 -4.9204) '() 3)
          '(#(3.7996 5.9091 -4.1764) '() 3)
          '(#(5.7873 5.8869 -3.5482) '() 3)
          '(#(6.0405 5.0875 -4.2446) '() 3)
          '(#(6.9135 6.8036 -3.431) '() 3)
          '(#(7.7293 6.4084 -2.3392) '() 3)
          '(#(8.7078 6.1815 -2.7624) '() 3)
          '(#(7.1305 5.1418 -1.7347) '() 3)
          '(#(7.204 5.1982 -0.6486) '() 3)
          '(#(7.7417 4.0392 -2.3813) '() 3)
          '(#(8.6785 4.1443 -2.563) '() 3)
          '(#(5.6666 5.2728 -2.1536) '() 3)
          '(#(5.1747 5.9805 -1.4863) '() 3)
          '(#(4.9997 4.0086 -2.1973) '() 3)
          '(#(10.2594 10.6774 -1.0056) '() 3)
          '(#(9.7528 8.708 -2.2631) '() 3)
          '(#(10.4471 9.7876 -1.9791) '() 3)
          '(#(8.7271 8.5575 -1.3991) '() 3)
          '(#(8.41 9.3803 -0.358) '() 3)
          '(#(9.2294 10.503 -0.1574) '() 3)
          '(#(11.511 10.1256 -2.7114) '() 3)
          '(#(7.2891 8.9068 0.3121) '() 3)
          '(#(7.7962 7.5519 -1.3859) '() 3)
          '(#(6.9702 7.8292 -0.3353) '() 3)
          '(#(9.0349 11.3951 0.825) '() 3)
          '(#(10.9013 11.4422 -0.9512) '() 3)
          '(#(12.1031 10.9341 -2.5861) '() 3)
          '(#(11.7369 9.518 -3.4859) '() 3)
          '(#(6.0888 7.399 0.1403) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rG06
  (cons (vector
          '(#(-0.9815
                0.0731
                -0.1772
                0.1912
                0.3054
                -0.9328
                -0.0141
                -0.9494
                -0.3137
                5.7506
                -5.1944
                4.747)
             '()
             12)
          '(#(-0.8143
                -0.5091
                -0.2788
                -0.0433
                -0.4257
                0.9038
                -0.5788
                0.748
                0.3246
                1.5227
                6.9114
                -7.0765)
             '()
             12)
          '(#(0.3822
                -0.7477
                0.543
                0.4552
                0.6637
                0.5935
                -0.8042
                0.0203
                0.5941
                -6.9472
                -4.1186
                -5.9108)
             '()
             12)
          '(#(0.564
                0.8007
                -0.2022
                -0.8247
                0.5587
                -0.0878
                0.0426
                0.2162
                0.9754
                6.2694
                -7.054
                3.3316)
             '()
             12)
          '(#(2.893 8.538 -3.328) '() 3)
          '(#(1.698 7.696 -3.557) '() 3)
          '(#(3.226 9.501 -4.402) '() 3)
          '(#(4.159 7.604 -3.034) '() 3)
          '(#(4.1214 6.7116 -1.9049) '() 3)
          '(#(3.3465 5.961 -2.0607) '() 3)
          '(#(4.0789 7.2928 -0.9837) '() 3)
          '(#(5.417 5.9293 -1.8186) '() 3)
          '(#(5.4506 5.34 -0.9023) '() 3)
          '(#(5.5067 5.0417 -2.9703) '() 3)
          '(#(6.865 4.9152 -3.3612) '() 3)
          '(#(7.109 3.8577 -3.2603) '() 3)
          '(#(7.7152 5.7282 -2.3894) '() 3)
          '(#(8.5029 6.2356 -2.9463) '() 3)
          '(#(8.1036 4.8568 -1.3419) '() 3)
          '(#(8.327 3.9651 -1.6184) '() 3)
          '(#(6.7003 6.7565 -1.8911) '() 3)
          '(#(6.5898 7.5329 -2.6482) '() 3)
          '(#(7.0505 7.2878 -0.6105) '() 3)
          '(#(6.6624 3.5061 -8.2986) '() 3)
          '(#(6.581 3.257 -5.9221) '() 3)
          '(#(6.5151 2.8263 -7.1625) '() 3)
          '(#(6.8364 4.5817 -5.8882) '() 3)
          '(#(7.0116 5.4064 -6.9609) '() 3)
          '(#(6.9173 4.826 -8.2361) '() 3)
          '(#(6.2717 1.5402 -7.425) '() 3)
          '(#(7.2573 6.707 -6.5394) '() 3)
          '(#(6.974 5.3703 -4.776) '() 3)
          '(#(7.2238 6.6275 -5.2453) '() 3)
          '(#(7.0668 5.5163 -9.3763) '() 3)
          '(#(6.5754 2.9964 -9.1545) '() 3)
          '(#(6.1908 1.1105 -8.3354) '() 3)
          '(#(6.1346 0.9352 -6.628) '() 3)
          '(#(7.4108 7.6227 -4.8418) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rG07
  (cons (vector
          '(#(0.0894
                -0.6059
                0.7905
                -0.681
                0.542
                0.4924
                -0.7268
                -0.5824
                -0.3642
                34.1424
                45.961
                -11.86)
             '()
             12)
          '(#(-0.8644
                -0.4956
                -0.0851
                -0.0427
                0.2409
                -0.9696
                0.501
                -0.8345
                -0.2294
                4.0167
                54.5377
                12.4779)
             '()
             12)
          '(#(0.3706
                -0.6167
                0.6945
                -0.2867
                -0.7872
                -0.546
                0.8834
                0.0032
                -0.4686
                -52.902
                18.6313
                -0.6709)
             '()
             12)
          '(#(0.4155
                0.9025
                -0.1137
                0.904
                -0.4236
                -0.0582
                -0.1007
                -0.0786
                -0.9918
                -7.6624
                -25.208
                49.5181)
             '()
             12)
          '(#(31.381 0.14 47.581) '() 3)
          '(#(29.986 0.663 47.629) '() 3)
          '(#(31.721 -0.646 48.809) '() 3)
          '(#(32.494 1.254 47.274) '() 3)
          '(#(33.8709 0.7918 47.2113) '() 3)
          '(#(34.1386 0.587 46.1747) '() 3)
          '(#(34.0186 -0.0095 47.9353) '() 3)
          '(#(34.7297 1.9687 47.6685) '() 3)
          '(#(35.7723 1.6845 47.8113) '() 3)
          '(#(34.6455 2.9768 46.666) '() 3)
          '(#(34.169 4.1829 47.2627) '() 3)
          '(#(35.0437 4.7633 47.556) '() 3)
          '(#(33.4145 3.7532 48.4954) '() 3)
          '(#(32.434 3.3797 48.2001) '() 3)
          '(#(33.3209 4.6953 49.5217) '() 3)
          '(#(33.2374 5.6059 49.2295) '() 3)
          '(#(34.2724 2.597 48.9773) '() 3)
          '(#(33.6373 1.8935 49.5157) '() 3)
          '(#(35.3453 3.1884 49.7285) '() 3)
          '(#(34.0511 7.893 43.7791) '() 3)
          '(#(34.9937 6.3369 45.3199) '() 3)
          '(#(35.0882 7.3126 44.42) '() 3)
          '(#(33.719 5.965 45.5374) '() 3)
          '(#(32.5845 6.477 44.9458) '() 3)
          '(#(32.743 7.5179 43.9914) '() 3)
          '(#(36.303 7.7827 44.1036) '() 3)
          '(#(31.4499 5.8335 45.4368) '() 3)
          '(#(33.276 4.9817 46.4043) '() 3)
          '(#(31.9235 4.9639 46.2934) '() 3)
          '(#(31.8602 8.1 43.3695) '() 3)
          '(#(34.2623 8.6223 43.1283) '() 3)
          '(#(36.5188 8.5081 43.4347) '() 3)
          '(#(37.0888 7.3524 44.5699) '() 3)
          '(#(31.0815 4.4201 46.7218) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rG08
  (cons (vector
          '(#(0.2224
                0.6335
                0.7411
                -0.3644
                -0.651
                0.6659
                0.9043
                -0.4181
                0.0861
                -47.6824
                -0.5823
                -31.7554)
             '()
             12)
          '(#(-0.8644
                -0.4956
                -0.0851
                -0.0427
                0.2409
                -0.9696
                0.501
                -0.8345
                -0.2294
                4.0167
                54.5377
                12.4779)
             '()
             12)
          '(#(0.3706
                -0.6167
                0.6945
                -0.2867
                -0.7872
                -0.546
                0.8834
                0.0032
                -0.4686
                -52.902
                18.6313
                -0.6709)
             '()
             12)
          '(#(0.4155
                0.9025
                -0.1137
                0.904
                -0.4236
                -0.0582
                -0.1007
                -0.0786
                -0.9918
                -7.6624
                -25.208
                49.5181)
             '()
             12)
          '(#(31.381 0.14 47.581) '() 3)
          '(#(29.986 0.663 47.629) '() 3)
          '(#(31.721 -0.646 48.809) '() 3)
          '(#(32.494 1.254 47.274) '() 3)
          '(#(32.5924 2.3488 48.2255) '() 3)
          '(#(33.3674 2.1246 48.9584) '() 3)
          '(#(31.5994 2.5917 48.6037) '() 3)
          '(#(33.0722 3.5577 47.4258) '() 3)
          '(#(33.031 4.4778 48.0089) '() 3)
          '(#(34.4173 3.3055 47.0316) '() 3)
          '(#(34.5056 3.391 45.6094) '() 3)
          '(#(34.7881 4.4152 45.3663) '() 3)
          '(#(33.1122 3.1198 45.101) '() 3)
          '(#(32.923 2.0469 45.1369) '() 3)
          '(#(32.7946 3.659 43.8529) '() 3)
          '(#(33.517 3.6707 43.2207) '() 3)
          '(#(32.273 3.8173 46.1566) '() 3)
          '(#(31.3094 3.3123 46.2244) '() 3)
          '(#(32.2391 5.2039 45.7807) '() 3)
          '(#(39.3337 2.7157 44.1441) '() 3)
          '(#(37.443 3.8242 45.0824) '() 3)
          '(#(38.7276 3.7646 44.7403) '() 3)
          '(#(36.7791 2.6963 44.7704) '() 3)
          '(#(37.286 1.5653 44.1678) '() 3)
          '(#(38.6647 1.5552 43.8235) '() 3)
          '(#(39.5123 4.8216 44.9936) '() 3)
          '(#(36.2829 0.611 44.0078) '() 3)
          '(#(35.4394 2.4314 44.9931) '() 3)
          '(#(35.218 1.1815 44.5128) '() 3)
          '(#(39.2907 0.6514 43.2796) '() 3)
          '(#(40.3076 2.8048 43.9352) '() 3)
          '(#(40.4994 4.9066 44.7977) '() 3)
          '(#(39.0738 5.6108 45.4464) '() 3)
          '(#(34.3856 0.4842 44.4185) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rG09
  (cons (vector
          '(#(-0.9699
                -0.1688
                -0.1753
                -0.105
                -0.3598
                0.9271
                -0.2196
                0.9176
                0.3312
                45.6217
                -38.9484
                -12.3208)
             '()
             12)
          '(#(-0.8644
                -0.4956
                -0.0851
                -0.0427
                0.2409
                -0.9696
                0.501
                -0.8345
                -0.2294
                4.0167
                54.5377
                12.4779)
             '()
             12)
          '(#(0.3706
                -0.6167
                0.6945
                -0.2867
                -0.7872
                -0.546
                0.8834
                0.0032
                -0.4686
                -52.902
                18.6313
                -0.6709)
             '()
             12)
          '(#(0.4155
                0.9025
                -0.1137
                0.904
                -0.4236
                -0.0582
                -0.1007
                -0.0786
                -0.9918
                -7.6624
                -25.208
                49.5181)
             '()
             12)
          '(#(31.381 0.14 47.581) '() 3)
          '(#(29.986 0.663 47.629) '() 3)
          '(#(31.721 -0.646 48.809) '() 3)
          '(#(32.494 1.254 47.274) '() 3)
          '(#(33.8709 0.7918 47.2113) '() 3)
          '(#(34.1386 0.587 46.1747) '() 3)
          '(#(34.0186 -0.0095 47.9353) '() 3)
          '(#(34.7297 1.9687 47.6685) '() 3)
          '(#(34.588 2.8482 47.0404) '() 3)
          '(#(34.3575 2.277 49.0081) '() 3)
          '(#(35.5157 2.1993 49.8389) '() 3)
          '(#(35.9424 3.201 49.8893) '() 3)
          '(#(36.4701 1.282 49.1169) '() 3)
          '(#(36.1545 0.2498 49.2683) '() 3)
          '(#(37.8262 1.4547 49.4008) '() 3)
          '(#(38.0227 1.6945 50.3094) '() 3)
          '(#(36.2242 1.6797 47.6725) '() 3)
          '(#(36.4297 0.8197 47.0351) '() 3)
          '(#(37.0289 2.848 47.4426) '() 3)
          '(#(34.3005 3.5042 54.607) '() 3)
          '(#(34.7693 3.7936 52.2874) '() 3)
          '(#(34.4484 4.2541 53.4939) '() 3)
          '(#(34.9354 2.4584 52.2785) '() 3)
          '(#(34.8092 1.5915 53.3422) '() 3)
          '(#(34.4646 2.1367 54.6085) '() 3)
          '(#(34.2514 5.5708 53.6503) '() 3)
          '(#(35.0641 0.2835 52.9337) '() 3)
          '(#(35.2669 1.669 51.1915) '() 3)
          '(#(35.3288 0.3954 51.6563) '() 3)
          '(#(34.3151 1.5317 55.665) '() 3)
          '(#(34.0623 3.9797 55.4539) '() 3)
          '(#(33.995 6.0502 54.5016) '() 3)
          '(#(34.3512 6.1432 52.8242) '() 3)
          '(#(35.5414 -0.6006 51.2679) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rG10
  (cons (vector
          '(#(-0.098
                -0.9723
                0.2122
                -0.9731
                0.1383
                0.1841
                -0.2083
                -0.1885
                -0.9597
                17.8469
                38.8265
                37.0475)
             '()
             12)
          '(#(-0.8644
                -0.4956
                -0.0851
                -0.0427
                0.2409
                -0.9696
                0.501
                -0.8345
                -0.2294
                4.0167
                54.5377
                12.4779)
             '()
             12)
          '(#(0.3706
                -0.6167
                0.6945
                -0.2867
                -0.7872
                -0.546
                0.8834
                0.0032
                -0.4686
                -52.902
                18.6313
                -0.6709)
             '()
             12)
          '(#(0.4155
                0.9025
                -0.1137
                0.904
                -0.4236
                -0.0582
                -0.1007
                -0.0786
                -0.9918
                -7.6624
                -25.208
                49.5181)
             '()
             12)
          '(#(31.381 0.14 47.581) '() 3)
          '(#(29.986 0.663 47.629) '() 3)
          '(#(31.721 -0.646 48.809) '() 3)
          '(#(32.494 1.254 47.274) '() 3)
          '(#(32.5924 2.3488 48.2255) '() 3)
          '(#(33.3674 2.1246 48.9584) '() 3)
          '(#(31.5994 2.5917 48.6037) '() 3)
          '(#(33.0722 3.5577 47.4258) '() 3)
          '(#(34.0333 3.3761 46.9447) '() 3)
          '(#(32.089 3.8338 46.4332) '() 3)
          '(#(31.6377 5.1787 46.5914) '() 3)
          '(#(32.2499 5.8016 45.9392) '() 3)
          '(#(31.9167 5.5319 48.0305) '() 3)
          '(#(31.1507 5.082 48.6621) '() 3)
          '(#(32.0865 6.889 48.3114) '() 3)
          '(#(31.5363 7.4819 47.7942) '() 3)
          '(#(33.2398 4.8224 48.2563) '() 3)
          '(#(33.3166 4.557 49.3108) '() 3)
          '(#(34.2528 5.7056 47.7476) '() 3)
          '(#(28.2782 6.3049 42.9364) '() 3)
          '(#(30.4001 5.8547 43.9258) '() 3)
          '(#(29.6195 6.1568 42.8913) '() 3)
          '(#(29.7005 5.7006 45.0649) '() 3)
          '(#(28.3383 5.8221 45.2343) '() 3)
          '(#(27.5519 6.1461 44.0958) '() 3)
          '(#(30.1838 6.3385 41.689) '() 3)
          '(#(27.9936 5.5926 46.5651) '() 3)
          '(#(30.2046 5.3825 46.3136) '() 3)
          '(#(29.1371 5.3398 47.1506) '() 3)
          '(#(26.3361 6.3024 44.0495) '() 3)
          '(#(27.8122 6.5394 42.0833) '() 3)
          '(#(29.7125 6.5595 40.8235) '() 3)
          '(#(31.1859 6.2231 41.6389) '() 3)
          '(#(28.9406 5.1504 48.2059) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rGs
  (list@1 rG01 rG02 rG03 rG04 rG05 rG06 rG07 rG08 rG09 rG10))
(define rU
  (cons (vector
          '(#(-0.0359
                -0.8071
                0.5894
                -0.2669
                0.5761
                0.7726
                -0.9631
                -0.1296
                -0.2361
                0.1584
                8.3434
                0.5434)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(5.243 -8.242 2.826) '() 3)
          '(#(5.1974 -8.8497 1.9223) '() 3)
          '(#(5.5548 -8.7348 3.7469) '() 3)
          '(#(6.314 -7.206 2.551) '() 3)
          '(#(7.2954 -7.6762 2.4898) '() 3)
          '(#(6.014 -6.542 1.289) '() 3)
          '(#(6.419 -5.184 1.362) '() 3)
          '(#(7.1608 -5.0495 0.5747) '() 3)
          '(#(7.076 -4.956 2.727) '() 3)
          '(#(6.777 -3.9803 3.1099) '() 3)
          '(#(8.45 -5.193 2.581) '() 3)
          '(#(8.8309 -4.8755 1.759) '() 3)
          '(#(6.406 -6.059 3.558) '() 3)
          '(#(5.4021 -5.7313 3.8281) '() 3)
          '(#(7.157 -6.424 4.707) '() 3)
          '(#(5.217 -4.326 1.169) '() 3)
          '(#(4.296 -2.256 0.629) '() 3)
          '(#(5.433 -3.02 0.799) '() 3)
          '(#(2.993 -2.678 0.794) '() 3)
          '(#(2.867 -4.063 1.183) '() 3)
          '(#(3.957 -4.83 1.355) '() 3)
          '(#(6.547 -2.556 0.629) '() 3)
          '(#(2.054 -1.9 0.613) '() 3)
          '(#(4.43 -1.302 0.36) '() 3)
          '(#(1.959 -4.457 1.325) '() 3)
          '(#(3.846 -5.786 1.624) '() 3))
        (cons '(@@-ru-@@) 34)))
(define rU01
  (cons (vector
          '(#(-0.0137
                -0.8012
                0.5983
                -0.2523
                0.5817
                0.7733
                -0.9675
                -0.1404
                -0.2101
                0.2031
                8.3874
                0.4228)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(5.2416 -8.2422 2.8181) '() 3)
          '(#(5.205 -8.8128 1.8901) '() 3)
          '(#(5.5368 -8.7738 3.7227) '() 3)
          '(#(6.3232 -7.2037 2.6002) '() 3)
          '(#(7.3048 -7.6757 2.5577) '() 3)
          '(#(6.0635 -6.5092 1.3456) '() 3)
          '(#(6.4697 -5.1547 1.4629) '() 3)
          '(#(7.2354 -5.0043 0.7018) '() 3)
          '(#(7.0856 -4.961 2.8521) '() 3)
          '(#(6.7777 -3.9935 3.2487) '() 3)
          '(#(8.4627 -5.1992 2.7423) '() 3)
          '(#(8.8693 -4.8638 1.9399) '() 3)
          '(#(6.3877 -6.0809 3.6362) '() 3)
          '(#(5.377 -5.7562 3.8834) '() 3)
          '(#(7.1024 -6.4754 4.7985) '() 3)
          '(#(5.2764 -4.2883 1.2538) '() 3)
          '(#(4.3777 -2.2062 0.7229) '() 3)
          '(#(5.5069 -2.9779 0.9088) '() 3)
          '(#(3.0693 -2.6246 0.85) '() 3)
          '(#(2.9279 -4.0146 1.2149) '() 3)
          '(#(4.0101 -4.7892 1.4017) '() 3)
          '(#(6.6267 -2.5166 0.7728) '() 3)
          '(#(2.1383 -1.8396 0.6581) '() 3)
          '(#(4.5223 -1.2489 0.4716) '() 3)
          '(#(2.0151 -4.4065 1.329) '() 3)
          '(#(3.8886 -5.7486 1.6535) '() 3))
        (cons '(@@-ru-@@) 34)))
(define rU02
  (cons (vector
          '(#(0.5141
                0.0246
                0.8574
                -0.5547
                -0.7529
                0.3542
                0.6542
                -0.6577
                -0.3734
                -9.1111
                -3.4598
                -3.2939)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(4.3825 -6.6585 4.0489) '() 3)
          '(#(4.6841 -7.2019 4.9443) '() 3)
          '(#(3.6189 -5.8889 4.1625) '() 3)
          '(#(5.6255 -5.9175 3.5998) '() 3)
          '(#(5.8732 -5.1228 4.3034) '() 3)
          '(#(6.7337 -6.8605 3.5222) '() 3)
          '(#(7.5932 -6.4923 2.4548) '() 3)
          '(#(8.5661 -6.2983 2.9064) '() 3)
          '(#(7.0527 -5.2012 1.8322) '() 3)
          '(#(7.1627 -5.2525 0.749) '() 3)
          '(#(7.6666 -4.1249 2.488) '() 3)
          '(#(8.5944 -4.2543 2.6981) '() 3)
          '(#(5.5661 -5.3029 2.2009) '() 3)
          '(#(5.0841 -6.0018 1.5172) '() 3)
          '(#(4.9062 -4.0452 2.2042) '() 3)
          '(#(7.6298 -7.6136 1.4752) '() 3)
          '(#(8.6945 -8.7046 -0.2857) '() 3)
          '(#(8.6943 -7.6514 0.6066) '() 3)
          '(#(7.7426 -9.6987 -0.3801) '() 3)
          '(#(6.6642 -9.5742 0.5722) '() 3)
          '(#(6.6391 -8.5592 1.4526) '() 3)
          '(#(9.584 -6.8186 0.6136) '() 3)
          '(#(7.8505 -10.5925 -1.2223) '() 3)
          '(#(9.4601 -8.7514 -0.9277) '() 3)
          '(#(5.9281 -10.2509 0.5782) '() 3)
          '(#(5.8831 -8.4931 2.1028) '() 3))
        (cons '(@@-ru-@@) 34)))
(define rU03
  (cons (vector
          '(#(-0.4993
                0.0476
                0.8651
                0.8078
                -0.3353
                0.4847
                0.3132
                0.9409
                0.129
                6.2989
                -5.2303
                -3.8577)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(3.9938 -6.7042 1.9023) '() 3)
          '(#(3.2332 -5.9343 2.0319) '() 3)
          '(#(3.9666 -7.2863 0.9812) '() 3)
          '(#(5.3098 -5.9546 1.8564) '() 3)
          '(#(5.3863 -5.3702 0.9395) '() 3)
          '(#(5.3851 -5.0642 3.0076) '() 3)
          '(#(6.7315 -4.9724 3.4462) '() 3)
          '(#(7.0033 -3.9202 3.3619) '() 3)
          '(#(7.5997 -5.8018 2.4948) '() 3)
          '(#(8.3627 -6.3254 3.0707) '() 3)
          '(#(8.041 -4.9501 1.4724) '() 3)
          '(#(8.2781 -4.0644 1.757) '() 3)
          '(#(6.5701 -6.8129 1.9714) '() 3)
          '(#(6.4186 -7.5809 2.7299) '() 3)
          '(#(6.9357 -7.3841 0.7235) '() 3)
          '(#(6.8024 -5.4718 4.8475) '() 3)
          '(#(7.9218 -5.57 6.8877) '() 3)
          '(#(7.8908 -5.0886 5.5944) '() 3)
          '(#(6.9789 -6.3827 7.4823) '() 3)
          '(#(5.8742 -6.7319 6.6202) '() 3)
          '(#(5.8182 -6.2769 5.357) '() 3)
          '(#(8.7747 -4.3728 5.1568) '() 3)
          '(#(7.1154 -6.7509 8.6509) '() 3)
          '(#(8.7055 -5.3037 7.4491) '() 3)
          '(#(5.1416 -7.3178 6.9665) '() 3)
          '(#(5.0441 -6.531 4.7784) '() 3))
        (cons '(@@-ru-@@) 34)))
(define rU04
  (cons (vector
          '(#(-0.5669
                -0.8012
                0.1918
                -0.8129
                0.5817
                0.0273
                -0.1334
                -0.1404
                -0.9811
                -0.3279
                8.3874
                0.3355)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(5.2416 -8.2422 2.8181) '() 3)
          '(#(5.205 -8.8128 1.8901) '() 3)
          '(#(5.5368 -8.7738 3.7227) '() 3)
          '(#(6.3232 -7.2037 2.6002) '() 3)
          '(#(7.3048 -7.6757 2.5577) '() 3)
          '(#(6.0635 -6.5092 1.3456) '() 3)
          '(#(6.4697 -5.1547 1.4629) '() 3)
          '(#(7.2354 -5.0043 0.7018) '() 3)
          '(#(7.0856 -4.961 2.8521) '() 3)
          '(#(6.7777 -3.9935 3.2487) '() 3)
          '(#(8.4627 -5.1992 2.7423) '() 3)
          '(#(8.8693 -4.8638 1.9399) '() 3)
          '(#(6.3877 -6.0809 3.6362) '() 3)
          '(#(5.377 -5.7562 3.8834) '() 3)
          '(#(7.1024 -6.4754 4.7985) '() 3)
          '(#(5.2764 -4.2883 1.2538) '() 3)
          '(#(3.8961 -3.0896 -0.1893) '() 3)
          '(#(5.0095 -3.8907 -0.0346) '() 3)
          '(#(3.048 -2.6632 0.8116) '() 3)
          '(#(3.4093 -3.131 2.1292) '() 3)
          '(#(4.4878 -3.9124 2.3088) '() 3)
          '(#(5.7005 -4.2164 -0.9842) '() 3)
          '(#(2.08 -1.9458 0.5503) '() 3)
          '(#(3.6834 -2.7882 -1.119) '() 3)
          '(#(2.8508 -2.8721 2.9172) '() 3)
          '(#(4.7188 -4.2247 3.2295) '() 3))
        (cons '(@@-ru-@@) 34)))
(define rU05
  (cons (vector
          '(#(-0.6298
                0.0246
                0.7763
                -0.5226
                -0.7529
                -0.4001
                0.5746
                -0.6577
                0.487
                -0.0208
                -3.4598
                -9.6882)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(4.3825 -6.6585 4.0489) '() 3)
          '(#(4.6841 -7.2019 4.9443) '() 3)
          '(#(3.6189 -5.8889 4.1625) '() 3)
          '(#(5.6255 -5.9175 3.5998) '() 3)
          '(#(5.8732 -5.1228 4.3034) '() 3)
          '(#(6.7337 -6.8605 3.5222) '() 3)
          '(#(7.5932 -6.4923 2.4548) '() 3)
          '(#(8.5661 -6.2983 2.9064) '() 3)
          '(#(7.0527 -5.2012 1.8322) '() 3)
          '(#(7.1627 -5.2525 0.749) '() 3)
          '(#(7.6666 -4.1249 2.488) '() 3)
          '(#(8.5944 -4.2543 2.6981) '() 3)
          '(#(5.5661 -5.3029 2.2009) '() 3)
          '(#(5.0841 -6.0018 1.5172) '() 3)
          '(#(4.9062 -4.0452 2.2042) '() 3)
          '(#(7.6298 -7.6136 1.4752) '() 3)
          '(#(8.5977 -9.5977 0.7329) '() 3)
          '(#(8.5951 -8.5745 1.6594) '() 3)
          '(#(7.7372 -9.7371 -0.3364) '() 3)
          '(#(6.7596 -8.6801 -0.4476) '() 3)
          '(#(6.7338 -7.6721 0.4408) '() 3)
          '(#(9.3993 -8.5377 2.5743) '() 3)
          '(#(7.8374 -10.699 -1.1008) '() 3)
          '(#(9.2924 -10.3081 0.8477) '() 3)
          '(#(6.0932 -8.6982 -1.1929) '() 3)
          '(#(6.0481 -6.9515 0.3446) '() 3))
        (cons '(@@-ru-@@) 34)))
(define rU06
  (cons (vector
          '(#(-0.9837
                0.0476
                -0.1733
                -0.1792
                -0.3353
                0.9249
                -0.0141
                0.9409
                0.3384
                5.7793
                -5.2303
                4.5997)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(3.9938 -6.7042 1.9023) '() 3)
          '(#(3.2332 -5.9343 2.0319) '() 3)
          '(#(3.9666 -7.2863 0.9812) '() 3)
          '(#(5.3098 -5.9546 1.8564) '() 3)
          '(#(5.3863 -5.3702 0.9395) '() 3)
          '(#(5.3851 -5.0642 3.0076) '() 3)
          '(#(6.7315 -4.9724 3.4462) '() 3)
          '(#(7.0033 -3.9202 3.3619) '() 3)
          '(#(7.5997 -5.8018 2.4948) '() 3)
          '(#(8.3627 -6.3254 3.0707) '() 3)
          '(#(8.041 -4.9501 1.4724) '() 3)
          '(#(8.2781 -4.0644 1.757) '() 3)
          '(#(6.5701 -6.8129 1.9714) '() 3)
          '(#(6.4186 -7.5809 2.7299) '() 3)
          '(#(6.9357 -7.3841 0.7235) '() 3)
          '(#(6.8024 -5.4718 4.8475) '() 3)
          '(#(6.692 -5.0495 7.1354) '() 3)
          '(#(6.6201 -4.55 5.8506) '() 3)
          '(#(6.9254 -6.3614 7.4926) '() 3)
          '(#(7.1046 -7.2543 6.3718) '() 3)
          '(#(7.0391 -6.7951 5.1106) '() 3)
          '(#(6.4083 -3.3696 5.634) '() 3)
          '(#(6.9679 -6.6901 8.68) '() 3)
          '(#(6.5626 -4.3957 7.8812) '() 3)
          '(#(7.2781 -8.2254 6.535) '() 3)
          '(#(7.1657 -7.4312 4.3503) '() 3))
        (cons '(@@-ru-@@) 34)))
(define rU07
  (cons (vector
          '(#(-0.9434
                0.3172
                0.0971
                0.2294
                0.4125
                0.8816
                0.2396
                0.8539
                -0.4619
                8.3625
                -52.7147
                1.3745)
             '()
             12)
          '(#(0.2765
                -0.1121
                -0.9545
                -0.8297
                0.4733
                -0.2959
                0.485
                0.8737
                0.0379
                -14.7774
                -45.2464
                21.9088)
             '()
             12)
          '(#(0.1063
                -0.6334
                -0.7665
                -0.5932
                -0.6591
                0.4624
                -0.798
                0.4055
                -0.4458
                43.7634
                4.3296
                28.489)
             '()
             12)
          '(#(0.7136
                -0.5032
                -0.4873
                0.6803
                0.3317
                0.6536
                -0.1673
                -0.7979
                0.5791
                -17.1858
                41.439
                -27.0751)
             '()
             12)
          '(#(21.388 15.078 45.577) '() 3)
          '(#(21.998 14.55 46.821) '() 3)
          '(#(21.145 14.027 44.542) '() 3)
          '(#(22.125 16.36 44.946) '() 3)
          '(#(21.5037 16.8594 43.7323) '() 3)
          '(#(20.8147 17.6663 43.9823) '() 3)
          '(#(21.1086 16.023 43.1557) '() 3)
          '(#(22.5654 17.4874 42.8616) '() 3)
          '(#(22.1584 17.7243 41.8785) '() 3)
          '(#(23.0557 18.6826 43.4751) '() 3)
          '(#(24.4788 18.6151 43.6455) '() 3)
          '(#(24.9355 19.084 42.7739) '() 3)
          '(#(24.7958 17.1427 43.6474) '() 3)
          '(#(24.5652 16.74 44.6336) '() 3)
          '(#(26.1041 16.8773 43.2455) '() 3)
          '(#(26.7516 17.5328 43.5149) '() 3)
          '(#(23.8109 16.5979 42.6377) '() 3)
          '(#(23.5756 15.5686 42.9084) '() 3)
          '(#(24.289 16.7447 41.2729) '() 3)
          '(#(24.942 19.2174 44.8923) '() 3)
          '(#(25.2655 20.5636 44.8883) '() 3)
          '(#(25.1663 21.2219 43.8561) '() 3)
          '(#(25.6911 21.1219 46.0494) '() 3)
          '(#(25.8051 20.4068 47.2048) '() 3)
          '(#(26.2093 20.9962 48.2534) '() 3)
          '(#(25.4692 19.0221 47.2053) '() 3)
          '(#(25.0502 18.4827 46.037) '() 3)
          '(#(25.9599 22.1772 46.0966) '() 3)
          '(#(25.5545 18.4409 48.1234) '() 3)
          '(#(24.7854 17.4265 45.9883) '() 3))
        (cons '(@@-ru-@@) 34)))
(define rU08
  (cons (vector
          '(#(-0.008
                -0.7928
                0.6094
                -0.7512
                0.4071
                0.5197
                -0.6601
                -0.4536
                -0.5988
                44.1482
                30.7036
                2.1088)
             '()
             12)
          '(#(0.2765
                -0.1121
                -0.9545
                -0.8297
                0.4733
                -0.2959
                0.485
                0.8737
                0.0379
                -14.7774
                -45.2464
                21.9088)
             '()
             12)
          '(#(0.1063
                -0.6334
                -0.7665
                -0.5932
                -0.6591
                0.4624
                -0.798
                0.4055
                -0.4458
                43.7634
                4.3296
                28.489)
             '()
             12)
          '(#(0.7136
                -0.5032
                -0.4873
                0.6803
                0.3317
                0.6536
                -0.1673
                -0.7979
                0.5791
                -17.1858
                41.439
                -27.0751)
             '()
             12)
          '(#(21.388 15.078 45.577) '() 3)
          '(#(21.998 14.55 46.821) '() 3)
          '(#(21.145 14.027 44.542) '() 3)
          '(#(22.125 16.36 44.946) '() 3)
          '(#(23.5096 16.1227 44.5783) '() 3)
          '(#(23.5649 15.8588 43.5222) '() 3)
          '(#(23.9621 15.4341 45.2919) '() 3)
          '(#(24.2805 17.4138 44.7151) '() 3)
          '(#(25.3492 17.2309 44.603) '() 3)
          '(#(23.8497 18.3471 43.7208) '() 3)
          '(#(23.409 19.5681 44.3321) '() 3)
          '(#(24.2595 20.2496 44.3524) '() 3)
          '(#(23.0418 19.1813 45.7407) '() 3)
          '(#(22.0532 18.7224 45.7273) '() 3)
          '(#(23.1307 20.2521 46.6291) '() 3)
          '(#(22.8888 21.1051 46.2611) '() 3)
          '(#(24.0799 18.1326 46.07) '() 3)
          '(#(23.649 17.437 46.79) '() 3)
          '(#(25.3329 18.7227 46.5109) '() 3)
          '(#(22.2515 20.1624 43.6698) '() 3)
          '(#(22.476 21.0609 42.6406) '() 3)
          '(#(23.6229 21.3462 42.3061) '() 3)
          '(#(21.3986 21.6081 42.0236) '() 3)
          '(#(20.1189 21.3012 42.3804) '() 3)
          '(#(19.1599 21.8516 41.7578) '() 3)
          '(#(19.8919 20.3745 43.4387) '() 3)
          '(#(20.979 19.8423 44.044) '() 3)
          '(#(21.5235 22.3222 41.2097) '() 3)
          '(#(18.8732 20.12 43.7312) '() 3)
          '(#(20.8545 19.1313 44.8608) '() 3))
        (cons '(@@-ru-@@) 34)))
(define rU09
  (cons (vector
          '(#(-0.0317
                0.1374
                0.99
                -0.3422
                -0.9321
                0.1184
                0.9391
                -0.3351
                0.0765
                -32.1929
                25.8198
                -28.5088)
             '()
             12)
          '(#(0.2765
                -0.1121
                -0.9545
                -0.8297
                0.4733
                -0.2959
                0.485
                0.8737
                0.0379
                -14.7774
                -45.2464
                21.9088)
             '()
             12)
          '(#(0.1063
                -0.6334
                -0.7665
                -0.5932
                -0.6591
                0.4624
                -0.798
                0.4055
                -0.4458
                43.7634
                4.3296
                28.489)
             '()
             12)
          '(#(0.7136
                -0.5032
                -0.4873
                0.6803
                0.3317
                0.6536
                -0.1673
                -0.7979
                0.5791
                -17.1858
                41.439
                -27.0751)
             '()
             12)
          '(#(21.388 15.078 45.577) '() 3)
          '(#(21.998 14.55 46.821) '() 3)
          '(#(21.145 14.027 44.542) '() 3)
          '(#(22.125 16.36 44.946) '() 3)
          '(#(21.5037 16.8594 43.7323) '() 3)
          '(#(20.8147 17.6663 43.9823) '() 3)
          '(#(21.1086 16.023 43.1557) '() 3)
          '(#(22.5654 17.4874 42.8616) '() 3)
          '(#(23.0565 18.3036 43.3915) '() 3)
          '(#(23.5375 16.5054 42.4925) '() 3)
          '(#(23.6574 16.4257 41.0649) '() 3)
          '(#(24.4701 17.0882 40.7671) '() 3)
          '(#(22.3525 16.9643 40.5396) '() 3)
          '(#(21.5993 16.1799 40.6133) '() 3)
          '(#(22.4693 17.4849 39.2515) '() 3)
          '(#(23.0899 17.0235 38.6827) '() 3)
          '(#(22.0341 18.0633 41.5279) '() 3)
          '(#(20.9509 18.1709 41.5846) '() 3)
          '(#(22.7249 19.302 41.21) '() 3)
          '(#(23.858 15.0648 40.5757) '() 3)
          '(#(25.1556 14.5982 40.4523) '() 3)
          '(#(26.1047 15.321 40.7448) '() 3)
          '(#(25.3391 13.3315 40.002) '() 3)
          '(#(24.2974 12.5148 39.6749) '() 3)
          '(#(24.545 11.341 39.261) '() 3)
          '(#(22.9633 12.9979 39.8053) '() 3)
          '(#(22.8009 14.2648 40.2524) '() 3)
          '(#(26.3414 12.9194 39.8855) '() 3)
          '(#(22.1227 12.3533 39.5486) '() 3)
          '(#(21.7989 14.6788 40.365) '() 3))
        (cons '(@@-ru-@@) 34)))
(define rU10
  (cons (vector
          '(#(-0.9674
                0.1021
                -0.2318
                -0.2514
                -0.2766
                0.9275
                0.0306
                0.9555
                0.2933
                27.8571
                -42.1305
                -24.4563)
             '()
             12)
          '(#(0.2765
                -0.1121
                -0.9545
                -0.8297
                0.4733
                -0.2959
                0.485
                0.8737
                0.0379
                -14.7774
                -45.2464
                21.9088)
             '()
             12)
          '(#(0.1063
                -0.6334
                -0.7665
                -0.5932
                -0.6591
                0.4624
                -0.798
                0.4055
                -0.4458
                43.7634
                4.3296
                28.489)
             '()
             12)
          '(#(0.7136
                -0.5032
                -0.4873
                0.6803
                0.3317
                0.6536
                -0.1673
                -0.7979
                0.5791
                -17.1858
                41.439
                -27.0751)
             '()
             12)
          '(#(21.388 15.078 45.577) '() 3)
          '(#(21.998 14.55 46.821) '() 3)
          '(#(21.145 14.027 44.542) '() 3)
          '(#(22.125 16.36 44.946) '() 3)
          '(#(23.5096 16.1227 44.5783) '() 3)
          '(#(23.5649 15.8588 43.5222) '() 3)
          '(#(23.9621 15.4341 45.2919) '() 3)
          '(#(24.2805 17.4138 44.7151) '() 3)
          '(#(23.8509 18.1819 44.072) '() 3)
          '(#(24.2506 17.8583 46.0741) '() 3)
          '(#(25.583 18.032 46.5775) '() 3)
          '(#(25.8569 19.0761 46.4256) '() 3)
          '(#(26.441 17.1555 45.7033) '() 3)
          '(#(26.3459 16.1253 46.0462) '() 3)
          '(#(27.7649 17.5888 45.6478) '() 3)
          '(#(28.1004 17.9719 46.4616) '() 3)
          '(#(25.7796 17.2997 44.3513) '() 3)
          '(#(25.9478 16.3824 43.7871) '() 3)
          '(#(26.2154 18.4984 43.6541) '() 3)
          '(#(25.7321 17.6281 47.9726) '() 3)
          '(#(25.5136 18.5779 48.956) '() 3)
          '(#(25.2079 19.7276 48.6503) '() 3)
          '(#(25.6482 18.1987 50.2518) '() 3)
          '(#(25.9847 16.9266 50.6092) '() 3)
          '(#(26.0918 16.6439 51.8416) '() 3)
          '(#(26.2067 15.9515 49.5943) '() 3)
          '(#(26.0713 16.3497 48.308) '() 3)
          '(#(25.489 18.9105 51.0618) '() 3)
          '(#(26.4742 14.931 49.8682) '() 3)
          '(#(26.2346 15.6394 47.4975) '() 3))
        (cons '(@@-ru-@@) 34)))
(define rUs
  (list@1 rU01 rU02 rU03 rU04 rU05 rU06 rU07 rU08 rU09 rU10))
(define rG*
  (cons (vector
          '(#(-0.2067
                -0.0264
                0.978
                0.977
                -0.0586
                0.2049
                0.0519
                0.9979
                0.0379
                1.0331
                -46.8078
                -36.4742)
             '()
             12)
          '(#(-0.8644
                -0.4956
                -0.0851
                -0.0427
                0.2409
                -0.9696
                0.501
                -0.8345
                -0.2294
                4.0167
                54.5377
                12.4779)
             '()
             12)
          '(#(0.3706
                -0.6167
                0.6945
                -0.2867
                -0.7872
                -0.546
                0.8834
                0.0032
                -0.4686
                -52.902
                18.6313
                -0.6709)
             '()
             12)
          '(#(0.4155
                0.9025
                -0.1137
                0.904
                -0.4236
                -0.0582
                -0.1007
                -0.0786
                -0.9918
                -7.6624
                -25.208
                49.5181)
             '()
             12)
          '(#(31.381 0.14 47.581) '() 3)
          '(#(29.986 0.663 47.629) '() 3)
          '(#(31.721 -0.646 48.809) '() 3)
          '(#(32.494 1.254 47.274) '() 3)
          '(#(32.161 2.237 46.256) '() 3)
          '(#(31.2986 2.819 46.5812) '() 3)
          '(#(32.098 1.7468 45.2845) '() 3)
          '(#(33.3476 3.1959 46.1947) '() 3)
          '(#(33.2668 3.8958 45.363) '() 3)
          '(#(33.3799 3.9183 47.4216) '() 3)
          '(#(34.6515 3.7222 48.0398) '() 3)
          '(#(35.2947 4.5412 47.718) '() 3)
          '(#(35.1756 2.4228 47.4827) '() 3)
          '(#(34.6778 1.5937 47.9856) '() 3)
          '(#(36.5631 2.2672 47.4798) '() 3)
          '(#(37.0163 2.6579 48.2305) '() 3)
          '(#(34.6953 2.5043 46.0448) '() 3)
          '(#(34.5444 1.4917 45.6706) '() 3)
          '(#(35.6679 3.3009 45.3487) '() 3)
          '(#(37.4804 4.0914 52.2559) '() 3)
          '(#(36.967 4.1312 49.9281) '() 3)
          '(#(37.8045 4.2519 50.955) '() 3)
          '(#(35.7171 3.8264 50.3222) '() 3)
          '(#(35.2668 3.642 51.6115) '() 3)
          '(#(36.2037 3.7829 52.6706) '() 3)
          '(#(39.0869 4.5552 50.7092) '() 3)
          '(#(33.9075 3.3338 51.6102) '() 3)
          '(#(34.6126 3.6358 49.5108) '() 3)
          '(#(33.5805 3.3442 50.3425) '() 3)
          '(#(35.9958 3.6512 53.8724) '() 3)
          '(#(38.2106 4.2053 52.9295) '() 3)
          '(#(39.8218 4.6863 51.3896) '() 3)
          '(#(39.342 4.6857 49.7407) '() 3)
          '(#(32.5194 3.107 50.2664) '() 3))
        (cons '(@@-rg-@@) 38)))
(define rU*
  (cons (vector
          '(#(-0.0109
                0.5907
                0.8068
                0.2217
                -0.7853
                0.578
                0.9751
                0.1852
                -0.1224
                -1.4225
                -11.0956
                -2.5217)
             '()
             12)
          '(#(-0.8313
                -0.4738
                -0.2906
                0.0649
                0.4366
                -0.8973
                0.5521
                -0.7648
                -0.3322
                1.6833
                6.806
                -7.0011)
             '()
             12)
          '(#(0.3445
                -0.763
                0.547
                -0.4628
                -0.645
                -0.6082
                0.8168
                -0.0436
                -0.5753
                -6.8179
                -3.9778
                -5.9887)
             '()
             12)
          '(#(0.5855
                0.7931
                -0.1682
                0.8103
                -0.579
                0.0906
                -0.0255
                -0.1894
                -0.9816
                6.1203
                -7.1051
                3.1984)
             '()
             12)
          '(#(2.676 -8.496 3.288) '() 3)
          '(#(1.495 -7.623 3.477) '() 3)
          '(#(2.949 -9.464 4.374) '() 3)
          '(#(3.973 -7.595 3.034) '() 3)
          '(#(5.243 -8.242 2.826) '() 3)
          '(#(5.1974 -8.8497 1.9223) '() 3)
          '(#(5.5548 -8.7348 3.7469) '() 3)
          '(#(6.314 -7.206 2.551) '() 3)
          '(#(5.8744 -6.2116 2.4731) '() 3)
          '(#(7.2798 -7.226 3.642) '() 3)
          '(#(8.5733 -6.941 3.1329) '() 3)
          '(#(8.9047 -6.0374 3.6446) '() 3)
          '(#(8.4429 -6.6596 1.6327) '() 3)
          '(#(9.288 -7.1071 1.1096) '() 3)
          '(#(8.2502 -5.2799 1.4754) '() 3)
          '(#(8.7676 -4.7284 2.0667) '() 3)
          '(#(7.1642 -7.4416 1.3021) '() 3)
          '(#(7.4125 -8.5002 1.226) '() 3)
          '(#(6.516 -6.9772 0.1267) '() 3)
          '(#(9.4531 -8.1107 3.4087) '() 3)
          '(#(11.5931 -9.0015 3.6357) '() 3)
          '(#(10.8101 -7.895 3.3748) '() 3)
          '(#(11.1439 -10.2744 3.9206) '() 3)
          '(#(9.7056 -10.4026 3.9332) '() 3)
          '(#(8.9192 -9.3419 3.6833) '() 3)
          '(#(11.3013 -6.8063 3.1326) '() 3)
          '(#(11.9431 -11.1876 4.1375) '() 3)
          '(#(12.584 -8.8673 3.6158) '() 3)
          '(#(9.2891 -11.2898 4.1313) '() 3)
          '(#(7.9263 -9.4537 3.6977) '() 3))
        (cons '(@@-ru-@@) 34)))
(define ffields-of-var '((id . 0) (tfo . 1) (nuc . 2)))

;;;'var

(define get-var
  (lambda (id lst)
    (let ((v (car lst)))
      (if (= id (vector-ref (car v) 0))
          v
          (get-var id (cdr lst))))))
(define queue->list (lambda (q) (if (null? q) () (car q))))
(define make-empty-queue (lambda () ()))
(define make-singleton-queue
  (lambda (item)
    (let ((items (cons item ()))) (cons items items))))
(define append-queues
  (lambda (q1 q2)
    (if (null? q1)
        q2
        (if (null? q2)
            q1
            (begin (set-cdr! (cdr q1) (car q2))
                   (set-cdr! q1 (cdr q2))
                   q1)))))
(define search
  (lambda (partial-inst domains constraint?)
    (if (null? domains)
        (make-singleton-queue partial-inst)
        (let ((remaining-domains (cdr domains)))
          (letrec ((try-assignments
                    (lambda (lst)
                      (if (null? lst)
                          (make-empty-queue)
                          (let ((var (car lst)))
                            (if (constraint? var partial-inst)
                                (let ((subsols1
                                       (search
                                         (cons var partial-inst)
                                         remaining-domains
                                         constraint?)))
                                  (let ((subsols2
                                         (try-assignments (cdr lst))))
                                    (append-queues subsols1 subsols2)))
                                (try-assignments (cdr lst))))))))
            (try-assignments ((car domains) partial-inst)))))))
(define parallel-search
  (lambda (partial-inst domains constraint?)
    (if (null? domains)
        (make-singleton-queue partial-inst)
        (let ((remaining-domains (cdr domains)))
          (letrec ((try-assignments
                    (lambda (lst)
                      (if (null? lst)
                          (make-empty-queue)
                          (let ((var (car lst)))
                            (if (constraint? var partial-inst)
                                (let ((subsols1
                                       (future
                                         (parallel-search
                                           (cons var partial-inst)
                                           remaining-domains
                                           constraint?))))
                                  (let ((subsols2
                                         (try-assignments (cdr lst))))
                                    (append-queues subsols1 subsols2)))
                                (try-assignments (cdr lst))))))))
            (try-assignments ((car domains) partial-inst)))))))
(define dgf-base
  (lambda (tfo ref nuc)
    (let ((t (vector-ref (car ref) 1)))
      (let ((n (vector-ref (car ref) 2)))
        (let ((align
               (tfo-inv-ortho
                 (if (if (memq@1 '@@-ra-@@ (cadr@1 n)) #t #f)
                     (tfo-align
                       (tfo-apply t (vector-ref (car n) 14))
                       (tfo-apply t (vector-ref (car n) 31))
                       (tfo-apply t (vector-ref (car n) 26)))
                     (if (if (memq@1 '@@-rc-@@ (cadr@1 n)) #t #f)
                         (tfo-align
                           (tfo-apply t (vector-ref (car n) 14))
                           (tfo-apply t (vector-ref (car n) 23))
                           (tfo-apply t (vector-ref (car n) 25)))
                         (if (if (memq@1 '@@-rg-@@ (cadr@1 n)) #t #f)
                             (tfo-align
                               (tfo-apply t (vector-ref (car n) 14))
                               (tfo-apply t (vector-ref (car n) 31))
                               (tfo-apply t (vector-ref (car n) 26)))
                             (if (if (memq@1 '@@-ru-@@ (cadr@1 n)) #t #f)
                                 (tfo-align
                                   (tfo-apply t (vector-ref (car n) 14))
                                   (tfo-apply t (vector-ref (car n) 23))
                                   (tfo-apply t (vector-ref (car n) 25)))
                                 (void))))))))
          (tfo-combine
            (vector-ref (car nuc) 0)
            (tfo-combine tfo align)))))))
(define reference
  (lambda (nuc i partial-inst)
    (list@1 (cons (vector i tfo-id nuc) (cons () 3)))))
(define wc-tfo
  '(#(-1.0
        0.0028
        -0.0019
        0.0028
        0.3468
        -0.9379
        -0.0019
        -0.9379
        -0.3468
        -0.008
        6.073
        8.7208)
     '()
     12))
(define wc
  (lambda (nuc i j partial-inst)
    (let ((ref (get-var j partial-inst)))
      (let ((tfo (dgf-base wc-tfo ref nuc)))
        (list@1 (cons (vector i tfo nuc) (cons () 3)))))))
(define wc-Dumas-tfo
  '(#(-0.9737
        -0.1834
        0.1352
        -0.1779
        0.2417
        -0.9539
        0.1422
        -0.9529
        -0.2679
        0.4837
        6.2649
        8.0285)
     '()
     12))
(define wc-Dumas
  (lambda (nuc i j partial-inst)
    (let ((ref (get-var j partial-inst)))
      (let ((tfo (dgf-base wc-Dumas-tfo ref nuc)))
        (list@1 (cons (vector i tfo nuc) (cons () 3)))))))
(define helix5*-tfo
  '(#(0.9886
        -0.0961
        0.1156
        0.1424
        0.8452
        -0.5152
        -0.0482
        0.5258
        0.8492
        -3.8737
        0.548
        3.8024)
     '()
     12))
(define helix5*
  (lambda (nuc i j partial-inst)
    (let ((ref (get-var j partial-inst)))
      (let ((tfo (dgf-base helix5*-tfo ref nuc)))
        (list@1 (cons (vector i tfo nuc) (cons () 3)))))))
(define helix3*-tfo
  '(#(0.9886
        0.1424
        -0.0482
        -0.0961
        0.8452
        0.5258
        0.1156
        -0.5152
        0.8492
        3.4426
        2.0474
        -3.7042)
     '()
     12))
(define helix3*
  (lambda (nuc i j partial-inst)
    (let ((ref (get-var j partial-inst)))
      (let ((tfo (dgf-base helix3*-tfo ref nuc)))
        (list@1 (cons (vector i tfo nuc) (cons () 3)))))))
(define G37-A38-tfo
  '(#(0.9991
        0.0164
        -0.0387
        -0.0375
        0.7616
        -0.647
        0.0189
        0.6478
        0.7615
        -3.3018
        0.9975
        2.5585)
     '()
     12))
(define G37-A38
  (lambda (nuc i j partial-inst)
    (let ((ref (get-var j partial-inst)))
      (let ((tfo (dgf-base G37-A38-tfo ref nuc)))
        (cons (vector i tfo nuc) (cons () 3))))))
(define stacked5*
  (lambda (nuc i j partial-inst)
    (cons (G37-A38 nuc i j partial-inst)
          (helix5* nuc i j partial-inst))))
(define A38-G37-tfo
  '(#(0.9991
        -0.0375
        0.0189
        0.0164
        0.7616
        0.6478
        -0.0387
        -0.647
        0.7615
        3.3819
        0.7718
        -2.5321)
     '()
     12))
(define A38-G37
  (lambda (nuc i j partial-inst)
    (let ((ref (get-var j partial-inst)))
      (let ((tfo (dgf-base A38-G37-tfo ref nuc)))
        (cons (vector i tfo nuc) (cons () 3))))))
(define stacked3*
  (lambda (nuc i j partial-inst)
    (cons (A38-G37 nuc i j partial-inst)
          (helix3* nuc i j partial-inst))))
(define P-O3*
  (lambda (nucs i j partial-inst)
    (let ((ref (get-var j partial-inst)))
      (let ((n (vector-ref (car ref) 2)))
        (let ((t (vector-ref (car ref) 1)))
          (let ((align
                 (tfo-inv-ortho
                   (tfo-align
                     (tfo-apply t (vector-ref (car n) 22))
                     (tfo-apply t (vector-ref (car n) 20))
                     (tfo-apply t (vector-ref (car n) 11))))))
            (letrec ((loop
                      (lambda (lst domains)
                        (if (null? lst)
                            domains
                            (let ((nuc (car lst)))
                              (let ((v-60
                                     (cons (vector
                                             i
                                             (tfo-combine
                                               (vector-ref (car nuc) 3)
                                               align)
                                             nuc)
                                           (cons () 3)))
                                    (v-180
                                     (cons (vector
                                             i
                                             (tfo-combine
                                               (vector-ref (car nuc) 2)
                                               align)
                                             nuc)
                                           (cons () 3)))
                                    (v-275
                                     (cons (vector
                                             i
                                             (tfo-combine
                                               (vector-ref (car nuc) 1)
                                               align)
                                             nuc)
                                           (cons () 3))))
                                (loop (cdr lst)
                                      (cons v-60
                                            (cons v-180
                                                  (cons v-275
                                                        domains))))))))))
              (loop nucs ()))))))))
(define anticodon-domains
  (list@1
    (lambda (partial-inst) (reference rC 27 partial-inst))
    (lambda (partial-inst) (helix5* rC 28 27 partial-inst))
    (lambda (partial-inst) (helix5* rA 29 28 partial-inst))
    (lambda (partial-inst) (helix5* rG 30 29 partial-inst))
    (lambda (partial-inst) (helix5* rA 31 30 partial-inst))
    (lambda (partial-inst) (wc rU 39 31 partial-inst))
    (lambda (partial-inst) (helix5* rC 40 39 partial-inst))
    (lambda (partial-inst) (helix5* rU 41 40 partial-inst))
    (lambda (partial-inst) (helix5* rG 42 41 partial-inst))
    (lambda (partial-inst) (helix5* rG 43 42 partial-inst))
    (lambda (partial-inst) (stacked3* rA 38 39 partial-inst))
    (lambda (partial-inst) (stacked3* rG 37 38 partial-inst))
    (lambda (partial-inst) (stacked3* rA 36 37 partial-inst))
    (lambda (partial-inst) (stacked3* rA 35 36 partial-inst))
    (lambda (partial-inst) (stacked3* rG 34 35 partial-inst))
    (lambda (partial-inst) (P-O3* rCs 32 31 partial-inst))
    (lambda (partial-inst) (P-O3* rUs 33 32 partial-inst))))
(define anticodon-constraint?
  (lambda (v partial-inst)
    (if (= (vector-ref (car v) 0) 33)
        (let ((p
               (let ((v (get-var 34 partial-inst)))
                 (tfo-apply
                   (vector-ref (car v) 1)
                   (vector-ref (car (vector-ref (car v) 2)) 4))))
              (o3*
               (let ((v@1 v))
                 (tfo-apply
                   (vector-ref (car v@1) 1)
                   (vector-ref (car (vector-ref (car v@1) 2)) 22)))))
          (not (< 3.0 (pt-dist p o3*))))
        #t)))
(define pseudoknot-domains
  (list@1
    (lambda (partial-inst) (reference rA 23 partial-inst))
    (lambda (partial-inst) (wc-Dumas rU 8 23 partial-inst))
    (lambda (partial-inst) (helix3* rG 22 23 partial-inst))
    (lambda (partial-inst) (wc-Dumas rC 9 22 partial-inst))
    (lambda (partial-inst) (helix3* rG 21 22 partial-inst))
    (lambda (partial-inst) (wc-Dumas rC 10 21 partial-inst))
    (lambda (partial-inst) (helix3* rC 20 21 partial-inst))
    (lambda (partial-inst) (wc-Dumas rG 11 20 partial-inst))
    (lambda (partial-inst) (helix3* rU* 19 20 partial-inst))
    (lambda (partial-inst) (wc-Dumas rA 12 19 partial-inst))
    (lambda (partial-inst) (helix3* rC 3 19 partial-inst))
    (lambda (partial-inst) (wc-Dumas rG 13 3 partial-inst))
    (lambda (partial-inst) (helix3* rC 2 3 partial-inst))
    (lambda (partial-inst) (wc-Dumas rG 14 2 partial-inst))
    (lambda (partial-inst) (helix3* rC 1 2 partial-inst))
    (lambda (partial-inst) (wc-Dumas rG* 15 1 partial-inst))
    (lambda (partial-inst) (P-O3* rUs 16 15 partial-inst))
    (lambda (partial-inst) (P-O3* rCs 17 16 partial-inst))
    (lambda (partial-inst) (P-O3* rAs 18 17 partial-inst))
    (lambda (partial-inst) (helix3* rU 7 8 partial-inst))
    (lambda (partial-inst) (P-O3* rCs 4 3 partial-inst))
    (lambda (partial-inst) (stacked5* rU 5 4 partial-inst))
    (lambda (partial-inst) (stacked5* rC 6 5 partial-inst))))
(define pseudoknot-constraint?
  (lambda (v partial-inst)
    (let ((G993 (vector-ref (car v) 0)))
      (if (memv@1 G993 '(18))
          (let ((p
                 (let ((v (get-var 19 partial-inst)))
                   (tfo-apply
                     (vector-ref (car v) 1)
                     (vector-ref (car (vector-ref (car v) 2)) 4))))
                (o3*
                 (let ((v@1 v))
                   (tfo-apply
                     (vector-ref (car v@1) 1)
                     (vector-ref (car (vector-ref (car v@1) 2)) 22)))))
            (not (< 4.0 (pt-dist p o3*))))
          (if (memv@1 G993 '(6))
              (let ((p
                     (let ((v (get-var 7 partial-inst)))
                       (tfo-apply
                         (vector-ref (car v) 1)
                         (vector-ref (car (vector-ref (car v) 2)) 4))))
                    (o3*
                     (let ((v@1 v))
                       (tfo-apply
                         (vector-ref (car v@1) 1)
                         (vector-ref (car (vector-ref (car v@1) 2)) 22)))))
                (not (< 4.5 (pt-dist p o3*))))
              #t)))))
(define count-solutions
  (lambda (sols save?)
    (letrec ((loop
              (lambda (lst n)
                (if (pair? lst) (loop (cdr lst) (+ n 1)) n))))
      (loop sols 0))))
(define to-upper
  (lambda (string@1)
    (list->string@1
      (map@1 char-upcase (string->list@1 string@1)))))
(define string-justify-left
  (lambda (w str)
    (let ((len (string-length str)))
      (if (>= len w)
          (substring str 0 w)
          (string-append str (make-string (- w len) #\space))))))
(define anticodon
  (lambda (save?)
    (count-solutions
      (queue->list
        (search '() anticodon-domains anticodon-constraint?))
      save?)))
(define parallel-anticodon
  (lambda (save?)
    (count-solutions
      (queue->list
        (parallel-search
          '()
          anticodon-domains
          anticodon-constraint?))
      save?)))
(define pseudoknot
  (lambda (save?)
    (count-solutions
      (queue->list
        (search '() pseudoknot-domains pseudoknot-constraint?))
      save?)))
(define parallel-pseudoknot
  (lambda (save?)
    (count-solutions
      (queue->list
        (parallel-search
          '()
          pseudoknot-domains
          pseudoknot-constraint?))
      save?)))
;;;(anticodon #f)
;;;(anticodon #f)
;;;(anticodon #f)
;;;(anticodon #f)
;;;(anticodon #f)
;;;(pseudoknot #f)
;;;(pseudoknot #f)
;;;(pseudoknot #f)
;;;(pseudoknot #f)
;;;(pseudoknot #f)
